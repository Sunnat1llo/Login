<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Aspire.Dashboard</name>
    </assembly>
    <members>
        <member name="T:Aspire.Dashboard.Authentication.AspirePolicyEvaluator">
            <summary>
            Mostly a copy of https://github.com/dotnet/aspnetcore/blob/e9647658dc46260cce21e980ec324565a4d39293/src/Security/Authorization/Policy/src/PolicyEvaluator.cs
            The logic has been updated to support an auth scheme requesting that challenge is suppressed.
            Used to avoid challenging to authenticate when rejecting requests sent on the wrong endpoint connection.
            </summary>
        </member>
        <member name="M:Aspire.Dashboard.Authentication.AspirePolicyEvaluator.#ctor(Microsoft.AspNetCore.Authorization.IAuthorizationService)">
            <summary>
            Constructor
            </summary>
            <param name="authorization">The authorization service.</param>
        </member>
        <member name="M:Aspire.Dashboard.Authentication.AspirePolicyEvaluator.AuthenticateAsync(Microsoft.AspNetCore.Authorization.AuthorizationPolicy,Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Does authentication for <see cref="P:Microsoft.AspNetCore.Authorization.AuthorizationPolicy.AuthenticationSchemes"/> and sets the resulting
            <see cref="T:System.Security.Claims.ClaimsPrincipal"/> to <see cref="P:Microsoft.AspNetCore.Http.HttpContext.User"/>. If no schemes are set, this is a no-op.
            </summary>
            <param name="policy">The <see cref="T:Microsoft.AspNetCore.Authorization.AuthorizationPolicy"/>.</param>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>.</param>
            <returns><see cref="M:Microsoft.AspNetCore.Authentication.AuthenticateResult.Success(Microsoft.AspNetCore.Authentication.AuthenticationTicket)"/> unless all schemes specified by <see cref="P:Microsoft.AspNetCore.Authorization.AuthorizationPolicy.AuthenticationSchemes"/> failed to authenticate.</returns>
        </member>
        <member name="M:Aspire.Dashboard.Authentication.AspirePolicyEvaluator.AuthorizeAsync(Microsoft.AspNetCore.Authorization.AuthorizationPolicy,Microsoft.AspNetCore.Authentication.AuthenticateResult,Microsoft.AspNetCore.Http.HttpContext,System.Object)">
            <summary>
            Attempts authorization for a policy using <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationService"/>.
            </summary>
            <param name="policy">The <see cref="T:Microsoft.AspNetCore.Authorization.AuthorizationPolicy"/>.</param>
            <param name="authenticationResult">The result of a call to <see cref="M:Aspire.Dashboard.Authentication.AspirePolicyEvaluator.AuthenticateAsync(Microsoft.AspNetCore.Authorization.AuthorizationPolicy,Microsoft.AspNetCore.Http.HttpContext)"/>.</param>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>.</param>
            <param name="resource">
            An optional resource the policy should be checked with.
            If a resource is not required for policy evaluation you may pass null as the value.
            </param>
            <returns>Returns <see cref="M:Microsoft.AspNetCore.Authorization.Policy.PolicyAuthorizationResult.Success"/> if authorization succeeds.
            Otherwise returns <see cref="M:Microsoft.AspNetCore.Authorization.Policy.PolicyAuthorizationResult.Forbid(Microsoft.AspNetCore.Authorization.AuthorizationFailure)"/> if <see cref="P:Microsoft.AspNetCore.Authentication.AuthenticateResult.Succeeded"/>, otherwise
            returns  <see cref="M:Microsoft.AspNetCore.Authorization.Policy.PolicyAuthorizationResult.Challenge"/></returns>
        </member>
        <member name="T:Aspire.Dashboard.Authentication.Connection.ConnectionTypeMiddleware">
            <summary>
            This connection middleware registers an OTLP feature on the connection.
            OTLP services check for this feature when authorizing incoming requests to
            ensure OTLP is only available on specified connections.
            </summary>
        </member>
        <member name="T:Aspire.Dashboard.Authentication.Connection.IConnectionTypeFeature">
            <summary>
            This feature's presence on a connection indicates that the connection is for OTLP.
            </summary>
        </member>
        <member name="M:Aspire.Dashboard.Authentication.OpenIdConnect.AuthorizationPolicyBuilderExtensions.RequireOpenIdClaims(Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder,Aspire.Dashboard.Configuration.OpenIdConnectOptions)">
            <summary>
            Validates that the the expected claim and value are present.
            </summary>
            <remarks>
            Checks are controlled by configuration.
            
            If <see cref="P:Aspire.Dashboard.Configuration.OpenIdConnectOptions.RequiredClaimType"/> is non-empty, a requirement for the claim is added.
            
            If a claim is being checked and <see cref="P:Aspire.Dashboard.Configuration.OpenIdConnectOptions.RequiredClaimValue"/> is non-empty, then the
            requirement is extended to also validate the specified value.
            </remarks>
        </member>
        <member name="P:Aspire.Dashboard.Components.Controls.GridValue.ContentBeforeValue">
            <summary>
            Content to include, if any, before the Value string
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Components.Controls.GridValue.ContentAfterValue">
            <summary>
            Content to include, if any, after the Value string
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Components.Controls.GridValue.ContentInButtonArea">
            <summary>
            Content to include, if any, in button area to right. Intended for adding extra buttons.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Components.Controls.GridValue.ValueToCopy">
            <summary>
            If set, copies this value instead of <see cref="P:Aspire.Dashboard.Components.Controls.GridValue.Value"/>.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Components.Controls.GridValue.ValueToVisualize">
            <summary>
            If set, this value is visualized rather than <see cref="P:Aspire.Dashboard.Components.Controls.GridValue.Value"/>.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Components.Controls.GridValue.EnableMasking">
            <summary>
            Determines whether or not masking support is enabled for this value
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Components.Controls.GridValue.IsMasked">
            <summary>
            Determines whether or not the value should currently be masked
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Components.Controls.GridValue.HighlightText">
            <summary>
            The text to highlight within the value when the value is displayed unmasked
            </summary>
        </member>
        <member name="T:Aspire.Dashboard.Components.Controls.IPropertyGridItem">
            <summary>
            Describes an name/value item to be displayed in a <see cref="T:Aspire.Dashboard.Components.Controls.PropertyGrid`1"/>.
            </summary>
            <remarks>
            <para>
            Implement this interface to use as the <c>TItem</c> of a <see cref="T:Aspire.Dashboard.Components.Controls.PropertyGrid`1"/> component.
            </para>
            <para>
            The property grid has two columns, bound to display strings <see cref="P:Aspire.Dashboard.Components.Controls.IPropertyGridItem.Name"/> and <see cref="P:Aspire.Dashboard.Components.Controls.IPropertyGridItem.Value"/>.
            </para>
            <para>
            The <see cref="P:Aspire.Dashboard.Components.Controls.IPropertyGridItem.IsValueSensitive"/> and <see cref="P:Aspire.Dashboard.Components.Controls.IPropertyGridItem.IsValueMasked"/> properties control masking behavior,
            which prevents sensitive data from being displayed in the UI without user interaction.
            </para>
            </remarks>
        </member>
        <member name="P:Aspire.Dashboard.Components.Controls.IPropertyGridItem.Name">
            <summary>
            Gets the display name of the item.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Components.Controls.IPropertyGridItem.Key">
            <summary>
            Gets the key of the item. Must be unique.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Components.Controls.IPropertyGridItem.Value">
            <summary>
            Gets the display value of the item.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Components.Controls.IPropertyGridItem.ValueToCopy">
            <summary>
            Overrides the value to copy. If <see langword="null"/>, <see cref="P:Aspire.Dashboard.Components.Controls.IPropertyGridItem.Value"/> is copied.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Components.Controls.IPropertyGridItem.ValueToVisualize">
            <summary>
            Overrides the value to visualize. If <see langword="null"/>, <see cref="P:Aspire.Dashboard.Components.Controls.IPropertyGridItem.Value"/> is visualized.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Components.Controls.IPropertyGridItem.IsValueSensitive">
            <summary>
            Gets whether this item's value is sensitive and should be masked.
            </summary>
            <remarks>
            Default implementation returns <see langword="false"/>.
            </remarks>
        </member>
        <member name="P:Aspire.Dashboard.Components.Controls.IPropertyGridItem.IsValueMasked">
            <summary>
            Gets and sets whether this item's value is masked in the UI by default.
            </summary>
            <remarks>
            <para>
            Masking is a security and privacy feature that causes values to appear as asterisks or other
            characters in the UI. This is useful for sensitive data like passwords or API keys.
            The user may choose to reveal the value by toggling the mask.
            </para>
            <para>
            Only used when <see cref="P:Aspire.Dashboard.Components.Controls.IPropertyGridItem.IsValueSensitive"/> is <see langword="true"/>. Otherwise this property
            is ignored.
            </para>
            </remarks>
        </member>
        <member name="M:Aspire.Dashboard.Components.Controls.IPropertyGridItem.MatchesFilter(System.String)">
            <summary>
            Gets whether this item matches a filter string.
            </summary>
            <remarks>
            Default implementation checks against <see cref="P:Aspire.Dashboard.Components.Controls.IPropertyGridItem.Name"/> and <see cref="P:Aspire.Dashboard.Components.Controls.IPropertyGridItem.Value"/>.
            </remarks>
            <param name="filter">The search text to match against.</param>
            <returns><see langword="true"/> if this item matches the filter, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="P:Aspire.Dashboard.Components.Controls.PropertyGrid`1.NameSort">
            <summary>
            Gets and sets the sorting behavior of the name column. Defaults to sorting on <see cref="P:Aspire.Dashboard.Components.Controls.IPropertyGridItem.Name"/>.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Components.Controls.PropertyGrid`1.ValueSort">
            <summary>
            Gets and sets the sorting behavior of the value column. Defaults to sorting on <see cref="P:Aspire.Dashboard.Components.Controls.IPropertyGridItem.Value"/>.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Components.Controls.SummaryDetailsView`1.ViewKey">
            <summary>
            Overrides the default key used to store the splitter size and orientation in local storage.
            By default, the key is based on the current URL. If you have multiple instances of this control
            on a page or want to share the same settings across multiple pages, you can set this property
            </summary>
        </member>
        <member name="T:Aspire.Dashboard.Components.PlotlyChart.ChartInterop">
            <summary>
            Handle user clicking on a trace point in the browser.
            </summary>
        </member>
        <member name="T:Aspire.Dashboard.Components.LogViewer">
            <summary>
            A log viewing UI component that shows a live view of a log, with syntax highlighting and automatic scrolling.
            </summary>
        </member>
        <member name="T:Aspire.Dashboard.Components.Pages.IPageWithSessionAndUrlState`2">
            <summary>
            Represents a page that can contain state both in the url and in localstorage.
            Navigating back to the page will restore the previous page state
            </summary>
            <typeparam name="TViewModel">The view model containing live state</typeparam>
            <typeparam name="TSerializableViewModel">A serializable version of <typeparamref name="TViewModel"/> that will be saved in session storage and restored from</typeparam>
        </member>
        <member name="P:Aspire.Dashboard.Components.Pages.IPageWithSessionAndUrlState`2.BasePath">
            <summary>
            The base relative path of the page (ie, Metrics for /Metrics)
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Components.Pages.IPageWithSessionAndUrlState`2.SessionStorageKey">
            <summary>
            The key to save page state to
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Components.Pages.IPageWithSessionAndUrlState`2.PageViewModel">
            <summary>
            The view model containing live state, to be instantiated in OnInitialized.
            </summary>
        </member>
        <member name="M:Aspire.Dashboard.Components.Pages.IPageWithSessionAndUrlState`2.UpdateViewModelFromQueryAsync(`0)">
            <summary>
            Computes the initial view model state based on query param values
            </summary>
        </member>
        <member name="M:Aspire.Dashboard.Components.Pages.IPageWithSessionAndUrlState`2.GetUrlFromSerializableViewModel(`1)">
            <summary>
            Translates the <param name="serializable">serializable form of the view model</param> to a relative URL associated
            with that state
            </summary>
        </member>
        <member name="M:Aspire.Dashboard.Components.Pages.IPageWithSessionAndUrlState`2.ConvertViewModelToSerializable">
            <summary>
            Maps <typeparamref name="TViewModel"/> to <typeparamref name="TSerializableViewModel"/>, which should contain simple types.
            </summary>
        </member>
        <member name="M:Aspire.Dashboard.Components.Pages.PageExtensions.AfterViewModelChangedAsync``2(Aspire.Dashboard.Components.Pages.IPageWithSessionAndUrlState{``0,``1},Aspire.Dashboard.Components.Layout.AspirePageContentLayout,System.Boolean)">
            <summary>
            Called after a change in the view model that will affect the url associated with new page state
            to navigate to the new url and save new state in localstorage.
            <param name="page"></param>
            <param name="layout"></param>
            <param name="waitToApplyMobileChange">Whether we should avoid applying this change immediately on mobile, and instead
            only once the toolbar has been closed.</param>
            </summary>
        </member>
        <member name="M:Aspire.Dashboard.Components.Pages.PageExtensions.InitializeViewModelAsync``2(Aspire.Dashboard.Components.Pages.IPageWithSessionAndUrlState{``0,``1})">
            <summary>
            If first visiting the page then initialize page state from storage and redirect using page state.
            </summary>
            <returns>
            A value indicating whether there was a page redirect. Further page initialization should check the return value
            and wait until parameters are updated if there was a page redirect.
            </returns>
        </member>
        <member name="M:Aspire.Dashboard.Components.Resize.GridColumnManager.IsColumnVisible(System.String)">
            <summary>
            Gets whether the column is known, visible, and has a width for the current viewport.
            </summary>
        </member>
        <member name="M:Aspire.Dashboard.Components.Resize.GridColumnManager.GetGridTemplateColumns">
            <summary>
            Gets a string that can be used as the value for the grid-template-columns CSS property.
            For example, <c>1fr 2fr 1fr</c>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Aspire.Dashboard.Components.Resize.ViewportInformation">
            <param name="IsDesktop">Whether the viewport is desktop-sized</param>
            <param name="IsUltraLowHeight">Ultra low height is users with very high zooms and/or very low resolutions,
            where the height is significantly constrained. In these cases, the users need the entire main page content
            (toolbar, title, main content, footer) to be scrollable, rather than just the main content.
            </param>
            <param name="IsUltraLowWidth">Ultra low width means users with extremely constricted viewport widths, requiring
            the disabling of horizontal space-intensive non-essential features such as the copy button in GridValue, so as
            to preserve maximum space for content.</param>
        </member>
        <member name="M:Aspire.Dashboard.Components.Resize.ViewportInformation.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <param name="IsDesktop">Whether the viewport is desktop-sized</param>
            <param name="IsUltraLowHeight">Ultra low height is users with very high zooms and/or very low resolutions,
            where the height is significantly constrained. In these cases, the users need the entire main page content
            (toolbar, title, main content, footer) to be scrollable, rather than just the main content.
            </param>
            <param name="IsUltraLowWidth">Ultra low width means users with extremely constricted viewport widths, requiring
            the disabling of horizontal space-intensive non-essential features such as the copy button in GridValue, so as
            to preserve maximum space for content.</param>
        </member>
        <member name="P:Aspire.Dashboard.Components.Resize.ViewportInformation.IsDesktop">
            <summary>Whether the viewport is desktop-sized</summary>
        </member>
        <member name="P:Aspire.Dashboard.Components.Resize.ViewportInformation.IsUltraLowHeight">
            <summary>Ultra low height is users with very high zooms and/or very low resolutions,
            where the height is significantly constrained. In these cases, the users need the entire main page content
            (toolbar, title, main content, footer) to be scrollable, rather than just the main content.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Components.Resize.ViewportInformation.IsUltraLowWidth">
            <summary>Ultra low width means users with extremely constricted viewport widths, requiring
            the disabling of horizontal space-intensive non-essential features such as the copy button in GridValue, so as
            to preserve maximum space for content.</summary>
        </member>
        <member name="P:Aspire.Dashboard.Configuration.FrontendOptions.MaxConsoleLogCount">
            <summary>
            Gets and sets an optional limit on the number of console log messages to be retained in the viewer.
            </summary>
            <remarks>
            The viewer will retain at most this number of log messages. When the limit is reached, the oldest messages will be removed.
            Defaults to 10,000, which matches the default used in the app host's circular buffer, on the publish side.
            </remarks>
        </member>
        <member name="P:Aspire.Dashboard.Configuration.OpenIdConnectOptions.RequiredClaimType">
            <summary>
            Gets the optional name of a claim that users authenticated via OpenID Connect are required to have.
            If specified, users without this claim will be rejected. If <see cref="P:Aspire.Dashboard.Configuration.OpenIdConnectOptions.RequiredClaimValue"/>
            is also specified, then the value of this claim must also match <see cref="P:Aspire.Dashboard.Configuration.OpenIdConnectOptions.RequiredClaimValue"/>.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Configuration.OpenIdConnectOptions.RequiredClaimValue">
            <summary>
            Gets the optional value of the <see cref="P:Aspire.Dashboard.Configuration.OpenIdConnectOptions.RequiredClaimType"/> claim for users authenticated via
            OpenID Connect. If specified, users not having this value for the corresponding claim type are
            rejected.
            </summary>
        </member>
        <member name="M:Aspire.Dashboard.ConsoleLogs.LogLevelParser.GenerateLogLevelRegex">
            <remarks>
            Pattern:<br/>
            <code>^                               # start of string\r\n(\\x1B\\[\\d{1,2}m)*               # zero or more ANSI control sequences\r\n(trce|dbug|info|warn|fail|crit) # one of the log level names\r\n(\\x1B\\[\\d{1,2}m)*               # zero or more ANSI control sequences\r\n:                               # colon, followed by arbitrary content that is not matched</code><br/>
            Options:<br/>
            <code>RegexOptions.ExplicitCapture | RegexOptions.IgnorePatternWhitespace | RegexOptions.CultureInvariant</code><br/>
            Explanation:<br/>
            <code>
            ○ Match if at the beginning of the string.<br/>
            ○ Loop greedily any number of times.<br/>
                ○ Match the string "\u001b[".<br/>
                ○ Match a Unicode digit atomically at least 1 and at most 2 times.<br/>
                ○ Match 'm'.<br/>
            ○ Match with 6 alternative expressions.<br/>
                ○ Match the string "trce".<br/>
                ○ Match the string "dbug".<br/>
                ○ Match the string "info".<br/>
                ○ Match the string "warn".<br/>
                ○ Match the string "fail".<br/>
                ○ Match the string "crit".<br/>
            ○ Loop greedily any number of times.<br/>
                ○ Match the string "\u001b[".<br/>
                ○ Match a Unicode digit atomically at least 1 and at most 2 times.<br/>
                ○ Match 'm'.<br/>
            ○ Match ':'.<br/>
            </code>
            </remarks>
        </member>
        <member name="M:Aspire.Dashboard.ConsoleLogs.UrlParser.GenerateUrlRegEx">
            <remarks>
            Pattern:<br/>
            <code>\\bhttps?://[-A-Za-z0-9+&amp;@#/%?=~_|$!:,.;]*[A-Za-z0-9+&amp;@#/%=~_|$]</code><br/>
            Explanation:<br/>
            <code>
            ○ Match if at a word boundary.<br/>
            ○ Match the string "http".<br/>
            ○ Match 's' atomically, optionally.<br/>
            ○ Match the string "://".<br/>
            ○ Match a character in the set [!#-&amp;+-;=?-Z_a-z|~] greedily any number of times.<br/>
            ○ Match a character in the set [#-&amp;+/-9=@-Z_a-z|~].<br/>
            </code>
            </remarks>
        </member>
        <member name="M:Aspire.Dashboard.ConsoleLogs.TimestampParser.GenerateRfc3339RegEx">
            <remarks>
            Pattern:<br/>
            <code>^                                           # Starts the string\r\n(\\d{4})                                     # Four digits for the year\r\n-                                           # Separator for the date\r\n(0[1-9]|1[0-2])                             # Two digits for the month, restricted to 01-12\r\n-                                           # Separator for the date\r\n(0[1-9]|[12][0-9]|3[01])                    # Two digits for the day, restricted to 01-31\r\nT                                           # Literal, separator between date and time, either a T or a space\r\n([01][0-9]|2[0-3])                          # Two digits for the hour, restricted to 00-23\r\n:                                           # Separator for the time\r\n([0-5][0-9])                                # Two digits for the minutes, restricted to 00-59\r\n:                                           # Separator for the time\r\n([0-5][0-9])                                # Two digits for the seconds, restricted to 00-59\r\n(\\.\\d{1,9})?                                # A period and up to nine digits for the partial seconds (optional)\r\n(Z|([Z+-]([01][0-9]|2[0-3]):([0-5][0-9])))? # Time Zone offset, in the form Z or ZHH:MM or +HH:MM or -HH:MM (optional)</code><br/>
            Options:<br/>
            <code>RegexOptions.ExplicitCapture | RegexOptions.IgnorePatternWhitespace | RegexOptions.CultureInvariant</code><br/>
            Explanation:<br/>
            <code>
            ○ Match if at the beginning of the string.<br/>
            ○ Match a Unicode digit exactly 4 times.<br/>
            ○ Match '-'.<br/>
            ○ Match with 2 alternative expressions.<br/>
                ○ Match a sequence of expressions.<br/>
                    ○ Match '0'.<br/>
                    ○ Match a character in the set [1-9].<br/>
                ○ Match a sequence of expressions.<br/>
                    ○ Match '1'.<br/>
                    ○ Match a character in the set [0-2].<br/>
            ○ Match '-'.<br/>
            ○ Match with 3 alternative expressions.<br/>
                ○ Match a sequence of expressions.<br/>
                    ○ Match '0'.<br/>
                    ○ Match a character in the set [1-9].<br/>
                ○ Match a sequence of expressions.<br/>
                    ○ Match a character in the set [12].<br/>
                    ○ Match a character in the set [0-9].<br/>
                ○ Match a sequence of expressions.<br/>
                    ○ Match '3'.<br/>
                    ○ Match a character in the set [01].<br/>
            ○ Match 'T'.<br/>
            ○ Match with 2 alternative expressions.<br/>
                ○ Match a sequence of expressions.<br/>
                    ○ Match a character in the set [01].<br/>
                    ○ Match a character in the set [0-9].<br/>
                ○ Match a sequence of expressions.<br/>
                    ○ Match '2'.<br/>
                    ○ Match a character in the set [0-3].<br/>
            ○ Match ':'.<br/>
            ○ Match a character in the set [0-5].<br/>
            ○ Match a character in the set [0-9].<br/>
            ○ Match ':'.<br/>
            ○ Match a character in the set [0-5].<br/>
            ○ Match a character in the set [0-9].<br/>
            ○ Optional (greedy).<br/>
                ○ Match '.'.<br/>
                ○ Match a Unicode digit greedily at least 1 and at most 9 times.<br/>
            ○ Optional (greedy).<br/>
                ○ Match with 2 alternative expressions, atomically.<br/>
                    ○ Match 'Z'.<br/>
                    ○ Match a sequence of expressions.<br/>
                        ○ Match a character in the set [+-Z].<br/>
                        ○ Match with 2 alternative expressions.<br/>
                            ○ Match a sequence of expressions.<br/>
                                ○ Match a character in the set [01].<br/>
                                ○ Match a character in the set [0-9].<br/>
                            ○ Match a sequence of expressions.<br/>
                                ○ Match '2'.<br/>
                                ○ Match a character in the set [0-3].<br/>
                        ○ Match ':'.<br/>
                        ○ Match a character in the set [0-5].<br/>
                        ○ Match a character in the set [0-9].<br/>
            </code>
            </remarks>
        </member>
        <member name="M:Aspire.Dashboard.DashboardWebApplication.#ctor(System.Action{Microsoft.AspNetCore.Builder.WebApplicationBuilder},Microsoft.AspNetCore.Builder.WebApplicationOptions)">
            <summary>
            Create a new instance of the <see cref="T:Aspire.Dashboard.DashboardWebApplication"/> class.
            </summary>
            <param name="preConfigureBuilder">Configuration for the internal app builder *before* normal dashboard configuration is done. This is for unit testing.</param>
            <param name="options">Environment configuration for the internal app builder. This is for unit testing</param>
        </member>
        <member name="M:Aspire.Dashboard.DashboardWebApplication.TryGetDashboardOptions(Microsoft.AspNetCore.Builder.WebApplicationBuilder,Microsoft.Extensions.Configuration.IConfigurationSection,Aspire.Dashboard.Configuration.DashboardOptions@,System.Collections.Generic.IEnumerable{System.String}@)">
            <summary>
            Load <see cref="T:Aspire.Dashboard.Configuration.DashboardOptions"/> from configuration without using DI. This performs
            the same steps as getting the options from DI but without the need for a service provider.
            </summary>
        </member>
        <member name="M:Aspire.Dashboard.Extensions.ClaimsIdentityExtensions.FindFirst(System.Security.Claims.ClaimsIdentity,System.String[])">
            <summary>
            Searches the claims in the <see cref="P:System.Security.Claims.ClaimsIdentity.Claims"/> for each of the claim types in <paramref name="claimTypes" />
            in the order presented and returns the first one that it finds.
            </summary>
        </member>
        <member name="M:Aspire.Dashboard.Extensions.StringExtensions.GetInitials(System.String,System.String)">
            <summary>
            Returns the two initial letters of the first and last words in the specified <paramref name="name"/>.
            If only one word is present, a single initial is returned. If <paramref name="name"/> is null, empty or
            white space only, <paramref name="defaultValue"/> is returned.
            </summary>
        </member>
        <member name="T:Aspire.Dashboard.Model.BrowserSecurityHeadersMiddleware">
            <summary>
            Middleware adds headers related to browser security that aren't built into ASP.NET Core:
            - Content-Security-Policy
            - Referrer-Policy
            - X-Content-Type-Options
            </summary>
        </member>
        <member name="M:Aspire.Dashboard.Model.BrowserStorage.ILocalStorage.GetUnprotectedAsync``1(System.String)">
            <summary>
            Get unprotected data from local storage. This must only be used with non-sensitive data.
            </summary>
        </member>
        <member name="M:Aspire.Dashboard.Model.BrowserStorage.ILocalStorage.SetUnprotectedAsync``1(System.String,``0)">
            <summary>
            Set unprotected data to local storage. This must only be used with non-sensitive data.
            </summary>
        </member>
        <member name="T:Aspire.Dashboard.Model.BrowserTimeProvider">
            <summary>
            This time provider is used to provide the time zone information from the browser to the server.
            It is a different type because we want to log setting the time zone, and we want a distinct type
            to register with DI:
            - BrowserTimeProvider must be scoped to the user's session.
            - The built-in TimeProvider registration must be singleton for the system time (used by auth).
            </summary>
        </member>
        <member name="M:Aspire.Dashboard.Model.ResourceEndpointHelpers.GetEndpoints(Aspire.Dashboard.Model.ResourceViewModel,System.Boolean)">
            <summary>
            A resource has services and endpoints. These can overlap. This method attempts to return a single list without duplicates.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Model.DisplayedEndpoint.Aspire#Dashboard#Components#Controls#IPropertyGridItem#Value">
            <summary>
            Don't display a plain string value here. The URL will be displayed as a hyperlink
            in <see cref="M:Aspire.Dashboard.Components.Controls.ResourceDetails.GetContentAfterValue(Aspire.Dashboard.Model.DisplayedEndpoint)"/> instead.
            </summary>
        </member>
        <member name="M:Aspire.Dashboard.Model.ResourceStateViewModel.GetStateViewModel(Aspire.Dashboard.Model.ResourceViewModel,Microsoft.Extensions.Localization.IStringLocalizer{Aspire.Dashboard.Resources.Columns})">
            <summary>
            Gets data needed to populate the content of the state column.
            </summary>
        </member>
        <member name="M:Aspire.Dashboard.Model.ResourceStateViewModel.GetResourceStateTooltip(Aspire.Dashboard.Model.ResourceViewModel,Microsoft.Extensions.Localization.IStringLocalizer{Aspire.Dashboard.Resources.Columns})">
            <summary>
            Gets the tooltip for a cell in the state column of the resource grid.
            </summary>
            <remarks>
            This is a static method so it can be called at the level of the parent column.
            </remarks>
        </member>
        <member name="P:Aspire.Dashboard.Model.ResourceViewModel.HealthStatus">
            <summary>The health status of the resource. <see langword="null"/> indicates that health status is expected but not yet available.</summary>
        </member>
        <member name="P:Aspire.Dashboard.Model.ThemeManager.SelectedTheme">
            <summary>
            The actual theme key (null, System, Dark, Light) set by the user.
            To ensure the theme is loaded from the browser, <see cref="M:Aspire.Dashboard.Model.ThemeManager.EnsureInitializedAsync"/> must be called before accessing.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Model.ThemeManager.EffectiveTheme">
            <summary>
            The effective theme, from app-theme.js, which is the theme that is actually applied to the browser window.
            To ensure the theme is loaded from the browser, <see cref="M:Aspire.Dashboard.Model.ThemeManager.EnsureInitializedAsync"/> must be called before accessing.
            </summary>
        </member>
        <member name="T:Aspire.Dashboard.Model.DashboardClient">
            <summary>
            Implements gRPC client that communicates with a resource server, populating data for the dashboard.
            </summary>
            <remarks>
            <para>
            An instance of this type is created per service call, so this class should not hold onto any state
            expected to live longer than a single RPC request. In the case of streaming requests, the instance
            lives until the stream is closed.
            </para>
            <para>
            If the <c>DOTNET_RESOURCE_SERVICE_ENDPOINT_URL</c> environment variable is not specified, then there's
            no known endpoint to connect to, and this dashboard client will be disabled. Calls to
            <see cref="M:Aspire.Dashboard.Model.IDashboardClient.SubscribeResourcesAsync(System.Threading.CancellationToken)"/> and <see cref="M:Aspire.Dashboard.Model.IDashboardClient.SubscribeConsoleLogs(System.String,System.Threading.CancellationToken)"/>
            will throw if <see cref="P:Aspire.Dashboard.Model.IDashboardClient.IsEnabled"/> is <see langword="false"/>. Callers should
            check this property first, before calling these methods.
            </para>
            </remarks>
        </member>
        <member name="T:Aspire.Dashboard.Model.IDashboardClient">
            <summary>
            Provides data about active resources to external components, such as the dashboard.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Model.IDashboardClient.IsEnabled">
            <summary>
            Gets whether this client object is enabled for use.
            </summary>
            <remarks>
            Users of this client should check <see cref="P:Aspire.Dashboard.Model.IDashboardClient.IsEnabled"/> before calling
            any other members of this interface, to avoid exceptions.
            </remarks>
        </member>
        <member name="P:Aspire.Dashboard.Model.IDashboardClient.ApplicationName">
            <summary>
            Gets the application name advertised by the server.
            </summary>
            <remarks>
            Intended for display in the UI.
            </remarks>
        </member>
        <member name="M:Aspire.Dashboard.Model.IDashboardClient.SubscribeResourcesAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the current set of resources and a stream of updates.
            </summary>
            <remarks>
            The returned subscription will not complete on its own.
            Callers are required to manage the lifetime of the subscription,
            using cancellation during enumeration.
            </remarks>
        </member>
        <member name="M:Aspire.Dashboard.Model.IDashboardClient.SubscribeConsoleLogs(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a stream of console log messages for the specified resource.
            Includes messages logged both before and after this method call.
            </summary>
            <remarks>
            <para>The returned sequence may end when the resource terminates.
            It is up to the implementation.</para>
            </remarks>
            <para>It is important that callers trigger <paramref name="cancellationToken"/>
            so that resources owned by the sequence and its consumers can be freed.</para>
        </member>
        <member name="F:Aspire.Dashboard.Model.ResourceViewModelChangeType.Upsert">
            <summary>
            The object was added if new, or updated if not.
            </summary>
        </member>
        <member name="F:Aspire.Dashboard.Model.ResourceViewModelChangeType.Delete">
            <summary>
            The object was deleted.
            </summary>
        </member>
        <member name="T:Aspire.Dashboard.Model.KnownProperties">
            <summary>
            Models some known property names for known types of resources.
            </summary>
            <remarks>
            Used as keys in the "properties" dictionary on resource snapshots and view models.
            Should be compared using <see cref="P:Aspire.StringComparers.ResourcePropertyName"/>.
            </remarks>
        </member>
        <member name="T:Aspire.Dashboard.Otlp.Model.OtlpApplication.ApplicationViewKeyComparer">
            <summary>
            Application views are equal when all properties are equal.
            </summary>
        </member>
        <member name="T:Aspire.Dashboard.Otlp.Model.OtlpScope">
            <summary>
            The Scope of a TraceSource, maps to the name of the ActivitySource in .NET
            </summary>
        </member>
        <member name="T:Aspire.Dashboard.Otlp.Model.OtlpSpan">
            <summary>
            Represents a Span within an Operation (Trace)
            </summary>
        </member>
        <member name="F:Aspire.Dashboard.Otlp.Model.OtlpSpanKind.Unspecified">
            <summary>
            Unspecified. Do NOT use as default.
            Implementations MAY assume SpanKind to be INTERNAL when receiving UNSPECIFIED.
            </summary>
        </member>
        <member name="F:Aspire.Dashboard.Otlp.Model.OtlpSpanKind.Internal">
            <summary>
            Indicates that the span represents an internal operation within an application,
            as opposed to an operation happening at the boundaries. Default value.
            </summary>
        </member>
        <member name="F:Aspire.Dashboard.Otlp.Model.OtlpSpanKind.Server">
            <summary>
            Indicates that the span covers server-side handling of an RPC or other
            remote network request.
            </summary>
        </member>
        <member name="F:Aspire.Dashboard.Otlp.Model.OtlpSpanKind.Client">
            <summary>
            Indicates that the span describes a request to some remote service.
            </summary>
        </member>
        <member name="F:Aspire.Dashboard.Otlp.Model.OtlpSpanKind.Producer">
            <summary>
            Indicates that the span describes a producer sending a message to a broker.
            Unlike CLIENT and SERVER, there is often no direct critical path latency relationship
            between producer and consumer spans. A PRODUCER span ends when the message was accepted
            by the broker while the logical processing of the message might span a much longer time.
            </summary>
        </member>
        <member name="F:Aspire.Dashboard.Otlp.Model.OtlpSpanKind.Consumer">
            <summary>
            Indicates that the span describes consumer receiving a message from a broker.
            Like the PRODUCER kind, there is often no direct critical path latency relationship
            between producer and consumer spans.
            </summary>
        </member>
        <member name="F:Aspire.Dashboard.Otlp.Model.OtlpSpanStatusCode.Unset">
            <summary>
            The default status.
            </summary>
        </member>
        <member name="F:Aspire.Dashboard.Otlp.Model.OtlpSpanStatusCode.Ok">
            <summary>
            The Span has been validated by an Application developer or Operator to 
            have completed successfully.
            </summary>
        </member>
        <member name="F:Aspire.Dashboard.Otlp.Model.OtlpSpanStatusCode.Error">
            <summary>
            The Span contains an error.
            </summary>
        </member>
        <member name="T:Aspire.Dashboard.Otlp.Storage.SubscriptionType">
            <summary>
            Indicates the purpose of the subscription.
            </summary>
        </member>
        <member name="F:Aspire.Dashboard.Otlp.Storage.SubscriptionType.Read">
            <summary>
            On subscription notification the app will read the latest data.
            </summary>
        </member>
        <member name="F:Aspire.Dashboard.Otlp.Storage.SubscriptionType.Other">
            <summary>
            On subscription notification the app won't read the latest data.
            </summary>
        </member>
        <member name="T:Aspire.Dashboard.Resources.Columns">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Columns.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Columns.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Columns.EndpointsColumnDisplayOverflowTitle">
            <summary>
              Looks up a localized string similar to Endpoints.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Columns.EndpointsColumnDisplayPlaceholder">
            <summary>
              Looks up a localized string similar to Starting....
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Columns.PersistentContainerIconTooltip">
            <summary>
              Looks up a localized string similar to This container is persistent and won&apos;t be stopped when the app host is shut down..
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Columns.ResourceNameDisplayContainerIdText">
            <summary>
              Looks up a localized string similar to Container ID: {0}.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Columns.ResourceNameDisplayCopyContainerIdText">
            <summary>
              Looks up a localized string similar to Copy container ID to clipboard.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Columns.ResourceNameDisplayProcessIdText">
            <summary>
              Looks up a localized string similar to Process ID: {0}.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Columns.RunningAndUnhealthyResourceStateToolTip">
            <summary>
              Looks up a localized string similar to Resource is running but not in a healthy state. Click for details..
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Columns.SourceColumnDisplayContainerArgsTitle">
            <summary>
              Looks up a localized string similar to Container args.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Columns.SourceColumnDisplayContainerCommand">
            <summary>
              Looks up a localized string similar to Command: {0}.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Columns.SourceColumnDisplayContainerCommandTitle">
            <summary>
              Looks up a localized string similar to Container command.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Columns.SourceColumnDisplayCopyCommandToClipboard">
            <summary>
              Looks up a localized string similar to Copy full command to clipboard.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Columns.SourceColumnDisplayPort">
            <summary>
              Looks up a localized string similar to Port: {0}.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Columns.SourceColumnDisplayPorts">
            <summary>
              Looks up a localized string similar to Ports: {0}.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Columns.SourceColumnDisplayWorkingDirectory">
            <summary>
              Looks up a localized string similar to Working directory: {0}.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Columns.SourceColumnSourceCopyContainerToClipboard">
            <summary>
              Looks up a localized string similar to Copy image name and tag to clipboard.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Columns.SourceColumnSourceCopyFullPathToClipboard">
            <summary>
              Looks up a localized string similar to Copy file path to clipboard.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Columns.StateColumnResourceContainerRuntimeUnhealthy">
             <summary>
               Looks up a localized string similar to Container runtime was found but appears to be unhealthy. Ensure that it is running.
            For more information, see https://aka.ms/dotnet/aspire/container-runtime-unhealthy.
             </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Columns.StateColumnResourceExited">
            <summary>
              Looks up a localized string similar to {0} is no longer running.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Columns.StateColumnResourceExitedUnexpectedly">
            <summary>
              Looks up a localized string similar to {0} exited unexpectedly with exit code {1}.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Columns.UnknownStateLabel">
            <summary>
              Looks up a localized string similar to Unknown.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Columns.UnreadLogErrorsBadgeErrorLogs">
            <summary>
              Looks up a localized string similar to {0} error logs.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Columns.UnreadLogErrorsBadgeOneErrorLog">
            <summary>
              Looks up a localized string similar to 1 error log.
            </summary>
        </member>
        <member name="T:Aspire.Dashboard.Resources.ControlsStrings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.ActionsButtonText">
            <summary>
              Looks up a localized string similar to Actions.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.ActionsColumnHeader">
            <summary>
              Looks up a localized string similar to Actions.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.ActionStructuredLogsText">
            <summary>
              Looks up a localized string similar to Structured logs.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.ActionViewDetailsText">
            <summary>
              Looks up a localized string similar to View details.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.ApplicationLower">
            <summary>
              Looks up a localized string similar to application.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.ChartContainerAllTags">
            <summary>
              Looks up a localized string similar to All tags.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.ChartContainerFilteredTags">
            <summary>
              Looks up a localized string similar to Filtered tags.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.ChartContainerFiltersHeader">
            <summary>
              Looks up a localized string similar to Filters.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.ChartContainerGraphAccessibleLabel">
            <summary>
              Looks up a localized string similar to Graph. For an accessible view please navigate to the Table tab.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.ChartContainerGraphTab">
            <summary>
              Looks up a localized string similar to Graph.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.ChartContainerOptionsHeader">
            <summary>
              Looks up a localized string similar to Options.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.ChartContainerSelectFilters">
            <summary>
              Looks up a localized string similar to Select filters.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.ChartContainerShowCountLabel">
            <summary>
              Looks up a localized string similar to Show count.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.ChartContainerTableTab">
            <summary>
              Looks up a localized string similar to Table.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.ChartContainerUnableToDisplay">
            <summary>
              Looks up a localized string similar to Unable to display chart.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.DetailsColumnHeader">
            <summary>
              Looks up a localized string similar to Details.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.DurationColumnHeader">
            <summary>
              Looks up a localized string similar to Duration.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.EnvironmentVariablesFilterToggleShowAll">
            <summary>
              Looks up a localized string similar to Show all.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.EnvironmentVariablesFilterToggleShowSpecOnly">
            <summary>
              Looks up a localized string similar to Show spec only.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.EnvironmentVariablesHideVariableValues">
            <summary>
              Looks up a localized string similar to Hide values.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.EnvironmentVariablesShowVariableValues">
            <summary>
              Looks up a localized string similar to Show values.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.EventColumnHeader">
            <summary>
              Looks up a localized string similar to Event.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.ExceptionDetailsTitle">
            <summary>
              Looks up a localized string similar to Exception details.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.FilterPlaceholder">
            <summary>
              Looks up a localized string similar to Filter....
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.FluentDataGridHeaderCellResizeButtonText">
            <summary>
              Looks up a localized string similar to Resize.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.FluentDataGridHeaderCellResizeLabel">
            <summary>
              Looks up a localized string similar to Column width (in pixels).
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.FluentDataGridHeaderCellSortAscendingButtonText">
            <summary>
              Looks up a localized string similar to Sort (ascending).
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.FluentDataGridHeaderCellSortButtonText">
            <summary>
              Looks up a localized string similar to Sort.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.FluentDataGridHeaderCellSortDescendingButtonText">
            <summary>
              Looks up a localized string similar to Sort (descending).
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.GridValueCopied">
            <summary>
              Looks up a localized string similar to Copied!.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.GridValueCopyToClipboard">
            <summary>
              Looks up a localized string similar to Copy to clipboard.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.GridValueMaskHideValue">
            <summary>
              Looks up a localized string similar to Hide value.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.GridValueMaskShowValue">
            <summary>
              Looks up a localized string similar to Show value.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.LabelAll">
            <summary>
              Looks up a localized string similar to (All).
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.LabelEmpty">
            <summary>
              Looks up a localized string similar to (Empty).
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.LabelNone">
            <summary>
              Looks up a localized string similar to (None).
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.LabelUnset">
            <summary>
              Looks up a localized string similar to (Unset).
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.Loading">
            <summary>
              Looks up a localized string similar to Loading....
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.MetricTableExemplarsColumnHeader">
            <summary>
              Looks up a localized string similar to Exemplars.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.MetricTableNoMetricsFound">
            <summary>
              Looks up a localized string similar to No metrics data found.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.MetricTableShowLatestValues">
            <summary>
              Looks up a localized string similar to Show latest 10 values.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.MetricTableShowOnlyValueChanges">
            <summary>
              Looks up a localized string similar to Only show value updates.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.MetricTableStartColumnHeader">
            <summary>
              Looks up a localized string similar to Time.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.MetricTableValueDecreased">
            <summary>
              Looks up a localized string similar to Value decreased.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.MetricTableValueIncreased">
            <summary>
              Looks up a localized string similar to Value increased.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.MetricTableValueNoChange">
            <summary>
              Looks up a localized string similar to Value did not change.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.MetricTableViewExemplarsLabel">
            <summary>
              Looks up a localized string similar to View exemplars.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.NameColumnHeader">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.PageToolbarLandmark">
            <summary>
              Looks up a localized string similar to Page toolbar.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.PlotlyChartCount">
            <summary>
              Looks up a localized string similar to Count.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.PlotlyChartExemplars">
            <summary>
              Looks up a localized string similar to Exemplars.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.PlotlyChartLength">
            <summary>
              Looks up a localized string similar to Length.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.PlotlyChartTime">
            <summary>
              Looks up a localized string similar to Time.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.PlotlyChartTrace">
            <summary>
              Looks up a localized string similar to Trace.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.PlotlyChartValue">
            <summary>
              Looks up a localized string similar to Value.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.PropertyGridValueColumnHeader">
            <summary>
              Looks up a localized string similar to Value.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.ResourceDetailsEndpointsHeader">
            <summary>
              Looks up a localized string similar to Endpoints.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.ResourceDetailsEnvironmentVariablesHeader">
            <summary>
              Looks up a localized string similar to Environment variables.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.ResourceDetailsResourceHeader">
            <summary>
              Looks up a localized string similar to Resource.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.ResourceDetailsVolumesHeader">
            <summary>
              Looks up a localized string similar to Volumes.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.ResourceDropdownReplicaAccessibleTitle">
            <summary>
              Looks up a localized string similar to {0} (replica of {1}).
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.ResourceHealthChecksHeader">
            <summary>
              Looks up a localized string similar to Health checks.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.ResourceLabel">
            <summary>
              Looks up a localized string similar to Resource.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.SelectAnApplication">
            <summary>
              Looks up a localized string similar to Select an application.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.SpanDetailsBacklinksHeader">
            <summary>
              Looks up a localized string similar to Backlinks.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.SpanDetailsContextHeader">
            <summary>
              Looks up a localized string similar to Context.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.SpanDetailsDetailsColumnHeader">
            <summary>
              Looks up a localized string similar to Details.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.SpanDetailsDuration">
            <summary>
              Looks up a localized string similar to Duration &lt;strong&gt;{0}&lt;/strong&gt;.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.SpanDetailsEventsHeader">
            <summary>
              Looks up a localized string similar to Events.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.SpanDetailsLinksHeader">
            <summary>
              Looks up a localized string similar to Links.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.SpanDetailsResource">
            <summary>
              Looks up a localized string similar to Resource &lt;strong&gt;{0}&lt;/strong&gt;.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.SpanDetailsResourceHeader">
            <summary>
              Looks up a localized string similar to Resource.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.SpanDetailsSpanColumnHeader">
            <summary>
              Looks up a localized string similar to Span.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.SpanDetailsSpanHeader">
            <summary>
              Looks up a localized string similar to Span.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.SpanDetailsSpanPrefix">
            <summary>
              Looks up a localized string similar to Span.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.SpanDetailsStartTime">
            <summary>
              Looks up a localized string similar to Start time &lt;strong&gt;{0}&lt;/strong&gt;.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.StateColumnHeader">
            <summary>
              Looks up a localized string similar to State.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.StructuredFilteringAddFilter">
            <summary>
              Looks up a localized string similar to Add filter.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.StructuredFilteringFilters">
            <summary>
              Looks up a localized string similar to Filters.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.StructuredFilteringNoFilters">
            <summary>
              Looks up a localized string similar to No filters.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.StructuredLogsDetailsContextHeader">
            <summary>
              Looks up a localized string similar to Context.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.StructuredLogsDetailsExceptionHeader">
            <summary>
              Looks up a localized string similar to Exception.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.StructuredLogsDetailsLogEntryHeader">
            <summary>
              Looks up a localized string similar to Log entry.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.StructuredLogsDetailsResource">
            <summary>
              Looks up a localized string similar to Resource &lt;strong&gt;{0}&lt;/strong&gt;.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.StructuredLogsDetailsResourceHeader">
            <summary>
              Looks up a localized string similar to Resource.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.StructuredLogsDetailsTimestamp">
            <summary>
              Looks up a localized string similar to Timestamp &lt;strong&gt;{0}&lt;/strong&gt;.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.SummaryDetailsViewCloseView">
            <summary>
              Looks up a localized string similar to Close.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.SummaryDetailsViewSplitHorizontal">
            <summary>
              Looks up a localized string similar to Split horizontal.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.SummaryDetailsViewSplitVertical">
            <summary>
              Looks up a localized string similar to Split vertical.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.TimeOffsetColumnHeader">
            <summary>
              Looks up a localized string similar to Time offset.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.TimestampColumnHeader">
            <summary>
              Looks up a localized string similar to Timestamp.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.TotalItemsFooterText">
            <summary>
              Looks up a localized string similar to Total: &lt;strong&gt;{0} results found&lt;/strong&gt;.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.TraceDetailAttributesHeader">
            <summary>
              Looks up a localized string similar to Attributes.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.ViewAction">
            <summary>
              Looks up a localized string similar to View.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.ControlsStrings.ViewLogsLink">
            <summary>
              Looks up a localized string similar to View logs.
            </summary>
        </member>
        <member name="T:Aspire.Dashboard.Resources.Login">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Login.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Login.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Login.AuthorizedUser">
            <summary>
              Looks up a localized string similar to Authorized User.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Login.Header">
            <summary>
              Looks up a localized string similar to {0} dashboard.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Login.HelpScreenshotAltText">
            <summary>
              Looks up a localized string similar to Screenshot of example console output showing where to find the dashboard frontend token. A red box highlights the token at the end of a url. The token is the value of a query parameter named &apos;t&apos;..
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Login.InvalidTokenErrorMessage">
            <summary>
              Looks up a localized string similar to Invalid token. Please try again.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Login.LoggedInAs">
            <summary>
              Looks up a localized string similar to Logged in as:.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Login.LogInButtonText">
            <summary>
              Looks up a localized string similar to Log in.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Login.MoreInfoLinkText">
            <summary>
              Looks up a localized string similar to More information.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Login.PageTitle">
            <summary>
              Looks up a localized string similar to {0} login.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Login.TextFieldPlaceholder">
            <summary>
              Looks up a localized string similar to Enter token to log in....
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Login.TokenHelpTextLine1">
            <summary>
              Looks up a localized string similar to Copy the highlighted token from the console to the login page and log in..
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Login.TokenHelpTextLine2">
            <summary>
              Looks up a localized string similar to Alternatively, click on the console link to automatically log in. The address might not be correct when the dashboard is running in a container and the external port is mapped to a different value..
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Login.TokenRequiredErrorMessage">
            <summary>
              Looks up a localized string similar to Token is required.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Login.UnexpectedValidationError">
            <summary>
              Looks up a localized string similar to Unexpected error when validating the token.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Login.WhereIsMyTokenLinkText">
            <summary>
              Looks up a localized string similar to Where do I find the token?.
            </summary>
        </member>
        <member name="T:Aspire.Dashboard.Resources.Metrics">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Metrics.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Metrics.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Metrics.MetricsHeader">
            <summary>
              Looks up a localized string similar to Metrics.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Metrics.MetricsInsturementDescriptionGridNameColumnHeader">
            <summary>
              Looks up a localized string similar to Description.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Metrics.MetricsInsturementNameGridNameColumnHeader">
            <summary>
              Looks up a localized string similar to Instrument.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Metrics.MetricsLastFifteenMinutes">
            <summary>
              Looks up a localized string similar to Last 15 minutes.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Metrics.MetricsLastFiveMinutes">
            <summary>
              Looks up a localized string similar to Last 5 minutes.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Metrics.MetricsLastHour">
            <summary>
              Looks up a localized string similar to Last hour.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Metrics.MetricsLastOneMinute">
            <summary>
              Looks up a localized string similar to Last 1 minute.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Metrics.MetricsLastSixHours">
            <summary>
              Looks up a localized string similar to Last 6 hours.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Metrics.MetricsLastThirtyMinutes">
            <summary>
              Looks up a localized string similar to Last 30 minutes.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Metrics.MetricsLastThreeHours">
            <summary>
              Looks up a localized string similar to Last 3 hours.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Metrics.MetricsLastTwelveHours">
            <summary>
              Looks up a localized string similar to Last 12 hours.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Metrics.MetricsLastTwentyFourHours">
            <summary>
              Looks up a localized string similar to Last 24 hours.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Metrics.MetricsNoMetricsForResource">
            <summary>
              Looks up a localized string similar to No metrics for the selected resource.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Metrics.MetricsPageTitle">
            <summary>
              Looks up a localized string similar to {0} metrics.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Metrics.MetricsSelectADuration">
            <summary>
              Looks up a localized string similar to Select a duration.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Metrics.MetricsSelectAResource">
            <summary>
              Looks up a localized string similar to Select a resource to view metrics.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Metrics.MetricsSelectInstrument">
            <summary>
              Looks up a localized string similar to Select instrument..
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Metrics.MetricsViewAttributesToolbar">
            <summary>
              Looks up a localized string similar to View attributes.
            </summary>
        </member>
        <member name="T:Aspire.Dashboard.Resources.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourceActionConsoleLogsText">
            <summary>
              Looks up a localized string similar to Console logs.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourceActionMetricsText">
            <summary>
              Looks up a localized string similar to Metrics.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourceActionStructuredLogsText">
            <summary>
              Looks up a localized string similar to Structured logs.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourceActionTelemetryTooltip">
            <summary>
              Looks up a localized string similar to No telemetry found for this resource..
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourceActionTracesText">
            <summary>
              Looks up a localized string similar to Traces.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourceCommandFailed">
            <summary>
              Looks up a localized string similar to {0} &quot;{1}&quot; failed.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourceCommandStarting">
            <summary>
              Looks up a localized string similar to {0} &quot;{1}&quot; starting.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourceCommandSuccess">
            <summary>
              Looks up a localized string similar to {0} &quot;{1}&quot; succeeded.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourceCommandToastViewLogs">
            <summary>
              Looks up a localized string similar to View console logs.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourceDetailsEndpointUrl">
            <summary>
              Looks up a localized string similar to Endpoint URL.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourceDetailsProxyUrl">
            <summary>
              Looks up a localized string similar to Proxy URL.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourceDetailsViewConsoleLogs">
            <summary>
              Looks up a localized string similar to View console logs.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourcesActionsColumnHeader">
            <summary>
              Looks up a localized string similar to Actions.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourcesDetailsContainerArgumentsProperty">
            <summary>
              Looks up a localized string similar to Container arguments.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourcesDetailsContainerCommandProperty">
            <summary>
              Looks up a localized string similar to Container command.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourcesDetailsContainerIdProperty">
            <summary>
              Looks up a localized string similar to Container ID.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourcesDetailsContainerImageProperty">
            <summary>
              Looks up a localized string similar to Container image.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourcesDetailsContainerLifetimeProperty">
            <summary>
              Looks up a localized string similar to Container lifetime.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourcesDetailsContainerPortsProperty">
            <summary>
              Looks up a localized string similar to Container ports.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourcesDetailsDisplayNameProperty">
            <summary>
              Looks up a localized string similar to Display name.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourcesDetailsExecutableArgumentsProperty">
            <summary>
              Looks up a localized string similar to Executable arguments.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourcesDetailsExecutablePathProperty">
            <summary>
              Looks up a localized string similar to Executable path.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourcesDetailsExecutableProcessIdProperty">
            <summary>
              Looks up a localized string similar to Process ID.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourcesDetailsExecutableWorkingDirectoryProperty">
            <summary>
              Looks up a localized string similar to Working directory.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourcesDetailsExitCodeProperty">
            <summary>
              Looks up a localized string similar to Exit code.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourcesDetailsHealthStateProperty">
            <summary>
              Looks up a localized string similar to Health state.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourcesDetailsProjectPathProperty">
            <summary>
              Looks up a localized string similar to Project path.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourcesDetailsStartTimeProperty">
            <summary>
              Looks up a localized string similar to Start time.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourcesDetailsStateProperty">
            <summary>
              Looks up a localized string similar to State.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourcesDetailsStopTimeProperty">
            <summary>
              Looks up a localized string similar to Stop time.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourcesEndpointsColumnHeader">
            <summary>
              Looks up a localized string similar to Endpoints.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourcesEnvironmentColumnHeader">
            <summary>
              Looks up a localized string similar to Environment.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourcesEnvironmentVariablesHeader">
            <summary>
              Looks up a localized string similar to Environment variables for {0}.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourcesHeader">
            <summary>
              Looks up a localized string similar to Resources.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourcesNoEnvironmentVariables">
            <summary>
              Looks up a localized string similar to No environment variables.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourcesNoResources">
            <summary>
              Looks up a localized string similar to No resources found.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourcesPageTitle">
            <summary>
              Looks up a localized string similar to {0} resources.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourcesResourceTypesHeader">
            <summary>
              Looks up a localized string similar to Resource types.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourcesSourceColumnHeader">
            <summary>
              Looks up a localized string similar to Source.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourcesStartTimeColumnHeader">
            <summary>
              Looks up a localized string similar to Start time.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourcesStateColumnHeader">
            <summary>
              Looks up a localized string similar to State.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourcesTypeColumnHeader">
            <summary>
              Looks up a localized string similar to Type.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourcesTypeFilterAllVisible">
            <summary>
              Looks up a localized string similar to Type filter: All types visible.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.ResourcesTypeFiltered">
            <summary>
              Looks up a localized string similar to Type filter: Filtered.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.WaitingForHealthDataMessage">
            <summary>
              Looks up a localized string similar to Waiting for health data....
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Resources.WaitingHealthDataStatusMessage">
            <summary>
              Looks up a localized string similar to Waiting....
            </summary>
        </member>
        <member name="T:Aspire.Dashboard.Resources.Routes">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Routes.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Routes.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Routes.ErrorHandlerPageRequestId">
            <summary>
              Looks up a localized string similar to Request ID:.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Routes.ErrorHandlerPageSubtitle">
            <summary>
              Looks up a localized string similar to An error occurred while processing your request.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Routes.ErrorHandlerPageTitle">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Routes.NotFoundDescription">
            <summary>
              Looks up a localized string similar to Not found.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Routes.NotFoundDetails">
            <summary>
              Looks up a localized string similar to The page you requested could not be found.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Routes.NotFoundPageTitle">
            <summary>
              Looks up a localized string similar to Not found.
            </summary>
        </member>
        <member name="T:Aspire.Dashboard.Resources.StructuredFiltering">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.StructuredFiltering.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.StructuredFiltering.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.StructuredFiltering.AddFilter">
            <summary>
              Looks up a localized string similar to Add filter.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.StructuredFiltering.ConditionContains">
            <summary>
              Looks up a localized string similar to contains.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.StructuredFiltering.ConditionNotContains">
            <summary>
              Looks up a localized string similar to not contains.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.StructuredFiltering.DialogTitleAddFilter">
            <summary>
              Looks up a localized string similar to Add filter.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.StructuredFiltering.DialogTitleEditFilter">
            <summary>
              Looks up a localized string similar to Edit filter.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.StructuredFiltering.Filters">
            <summary>
              Looks up a localized string similar to Filters.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.StructuredFiltering.NoFilters">
            <summary>
              Looks up a localized string similar to No filters.
            </summary>
        </member>
        <member name="T:Aspire.Dashboard.Resources.StructuredLogs">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.StructuredLogs.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.StructuredLogs.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.StructuredLogs.ActionLogMessageText">
            <summary>
              Looks up a localized string similar to Log message.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.StructuredLogs.MessageExceededLimitBody">
            <summary>
              Looks up a localized string similar to A maximum of {0} structured logs are stored. Old structured logs are automatically removed..
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.StructuredLogs.MessageExceededLimitTitle">
            <summary>
              Looks up a localized string similar to Exceeded structured log limit.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.StructuredLogs.StructuredLogsAddFilter">
            <summary>
              Looks up a localized string similar to Add filter.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.StructuredLogs.StructuredLogsEditFilter">
            <summary>
              Looks up a localized string similar to Edit filter.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.StructuredLogs.StructuredLogsEntryDetails">
            <summary>
              Looks up a localized string similar to Log entry details.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.StructuredLogs.StructuredLogsFilters">
            <summary>
              Looks up a localized string similar to Filters.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.StructuredLogs.StructuredLogsHeader">
            <summary>
              Looks up a localized string similar to Structured logs.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.StructuredLogs.StructuredLogsLevelColumnHeader">
            <summary>
              Looks up a localized string similar to Level.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.StructuredLogs.StructuredLogsLevels">
            <summary>
              Looks up a localized string similar to Level.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.StructuredLogs.StructuredLogsMessageColumnHeader">
            <summary>
              Looks up a localized string similar to Message.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.StructuredLogs.StructuredLogsMessageFilter">
            <summary>
              Looks up a localized string similar to Message filter.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.StructuredLogs.StructuredLogsMinimumLogFilter">
            <summary>
              Looks up a localized string similar to Minimum log level filter.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.StructuredLogs.StructuredLogsNoFilters">
            <summary>
              Looks up a localized string similar to No filters.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.StructuredLogs.StructuredLogsNoLogsFound">
            <summary>
              Looks up a localized string similar to No structured logs found.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.StructuredLogs.StructuredLogsPageTitle">
            <summary>
              Looks up a localized string similar to {0} structured logs.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.StructuredLogs.StructuredLogsResourceColumnHeader">
            <summary>
              Looks up a localized string similar to Resource.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.StructuredLogs.StructuredLogsSelectMinimumLogLevel">
            <summary>
              Looks up a localized string similar to Select a minimum log level.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.StructuredLogs.StructuredLogsTimestampColumnHeader">
            <summary>
              Looks up a localized string similar to Timestamp.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.StructuredLogs.StructuredLogsTraceColumnHeader">
            <summary>
              Looks up a localized string similar to Trace.
            </summary>
        </member>
        <member name="T:Aspire.Dashboard.Resources.Traces">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Traces.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Traces.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Traces.MessageExceededLimitBody">
            <summary>
              Looks up a localized string similar to A maximum of {0} traces are stored. Old traces are automatically removed..
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Traces.MessageExceededLimitTitle">
            <summary>
              Looks up a localized string similar to Exceeded trace limit.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Traces.TracesFullName">
            <summary>
              Looks up a localized string similar to Name: {0}.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Traces.TracesHeader">
            <summary>
              Looks up a localized string similar to Traces.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Traces.TracesNameFilter">
            <summary>
              Looks up a localized string similar to Name filter.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Traces.TracesNoTraces">
            <summary>
              Looks up a localized string similar to No traces found.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Traces.TracesPageTitle">
            <summary>
              Looks up a localized string similar to {0} traces.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Traces.TracesResourceSpans">
            <summary>
              Looks up a localized string similar to {0} spans.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Traces.TracesSpansColumnHeader">
            <summary>
              Looks up a localized string similar to Spans.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Traces.TracesTotalErroredTraces">
            <summary>
              Looks up a localized string similar to Errored: {0}.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Traces.TracesTotalTraces">
            <summary>
              Looks up a localized string similar to Total: {0}.
            </summary>
        </member>
        <member name="P:Aspire.Dashboard.Resources.Traces.TracesTraceId">
            <summary>
              Looks up a localized string similar to Trace Id: {0}.
            </summary>
        </member>
        <member name="T:Aspire.Dashboard.Utils.CancellationSeries">
            <summary>
            Produces a series of <see cref="T:System.Threading.CancellationToken"/>s that are used to coordinate
            cancellation of non-overlapping operations in a concurrent environment.
            </summary>
            <remarks>
            The class produces a stream of cancellation tokens, where each represents the lifetime of an operation that
            started when <see cref="M:Aspire.Dashboard.Utils.CancellationSeries.NextAsync"/> was called. Each call of that method cancels the last token it issued, then returns a new one.
            In that way, you can set up operations with cancellation and no overlap.
            The effectiveness of this approach depends upon good support for cancellation in operations under that token.
            It's important that any await can be promptly cancelled.
            </remarks>
        </member>
        <member name="M:Aspire.Dashboard.Utils.CancellationSeries.NextAsync">
            <summary>
            Produces the next token, cancelling the one before.
            </summary>
            <remarks>
            The returned token represents the lifetime of an operation, in a concurrent environment where operations will not overlap.
            This method cancels token it returned the last time it was called. In that way, you can set up operations with cancellation and no overlap.
            The effectiveness of this approach depends upon good support for cancellation in operations under that token.
            It's important that any await can be promptly cancelled.
            </remarks>
            <returns>A cancellation token that manages the lifetime of a non-overlapping operation in a concurrent environment.</returns>
        </member>
        <member name="M:Aspire.Dashboard.Utils.CancellationSeries.ClearAsync">
            <summary>
            Cancels the current <see cref="T:System.Threading.CancellationToken"/> but doesn't create a new one.
            </summary>
            <remarks>
            Multiple calls to this method will be no-ops until <see cref="M:Aspire.Dashboard.Utils.CancellationSeries.NextAsync"/> is called,
            at which point there's something to cancel.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Aspire.Dashboard.Utils.FormatHelpers.MatchSecondsInTimeFormatPattern">
            <remarks>
            Pattern:<br/>
            <code>(:ss|\\.ss|:s|\\.s)</code><br/>
            Explanation:<br/>
            <code>
            ○ 1st capture group.<br/>
                ○ Match with 2 alternative expressions, atomically.<br/>
                    ○ Match a sequence of expressions.<br/>
                        ○ Match the string ":s".<br/>
                        ○ Match with 2 alternative expressions, atomically.<br/>
                            ○ Match 's'.<br/>
                            ○ Match an empty string.<br/>
                    ○ Match a sequence of expressions.<br/>
                        ○ Match the string ".s".<br/>
                        ○ Match with 2 alternative expressions, atomically.<br/>
                            ○ Match 's'.<br/>
                            ○ Match an empty string.<br/>
            </code>
            </remarks>
        </member>
        <member name="T:Aspire.ResourceService.Proto.V1.Resource">
            <summary>
            Models the full state of an resource (container, executable, project, etc) at a particular point in time.
            </summary>
        </member>
        <member name="M:Aspire.ResourceService.Proto.V1.Resource.ToViewModel(Aspire.Dashboard.Model.BrowserTimeProvider,Aspire.Dashboard.Model.IKnownPropertyLookup)">
            <summary>
            Converts this gRPC message object to a view model for use in the dashboard UI.
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.Resource.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.Resource.ResourceTypeFieldNumber">
            <summary>Field number for the "resource_type" field.</summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.Resource.DisplayNameFieldNumber">
            <summary>Field number for the "display_name" field.</summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.Resource.UidFieldNumber">
            <summary>Field number for the "uid" field.</summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.Resource.StateFieldNumber">
            <summary>Field number for the "state" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.Resource.HasState">
            <summary>Gets whether the "state" field is set</summary>
        </member>
        <member name="M:Aspire.ResourceService.Proto.V1.Resource.ClearState">
            <summary>Clears the value of the "state" field</summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.Resource.CreatedAtFieldNumber">
            <summary>Field number for the "created_at" field.</summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.Resource.EnvironmentFieldNumber">
            <summary>Field number for the "environment" field.</summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.Resource.CommandsFieldNumber">
            <summary>Field number for the "commands" field.</summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.Resource.PropertiesFieldNumber">
            <summary>Field number for the "properties" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.Resource.Properties">
             <summary>
             Properties holding data not modeled directly on the message.
            
             For:
             - Containers: image, container_id, ports
             - Executables: process_id, executable_path, working_directory, arguments
             - Projects: process_id, project_path
             </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.Resource.UrlsFieldNumber">
            <summary>Field number for the "urls" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.Resource.Urls">
            <summary>
            The list of urls that this resource exposes
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.Resource.StateStyleFieldNumber">
            <summary>Field number for the "state_style" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.Resource.StateStyle">
            <summary>
            The style of the state. This is used to determine the state icon.
            Supported styles are "success", "info", "warning" and "error". Any other style
            will be treated as "unknown".
            </summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.Resource.HasStateStyle">
            <summary>Gets whether the "state_style" field is set</summary>
        </member>
        <member name="M:Aspire.ResourceService.Proto.V1.Resource.ClearStateStyle">
            <summary>Clears the value of the "state_style" field</summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.Resource.VolumesFieldNumber">
            <summary>Field number for the "volumes" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.Resource.Volumes">
            <summary>
            The set of volumes mounted to the resource. Only applies to containers.
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.Resource.HealthReportsFieldNumber">
            <summary>Field number for the "health_reports" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.Resource.HealthReports">
            <summary>
            Reports from health checks, about this resource.
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.Resource.StartedAtFieldNumber">
            <summary>Field number for the "started_at" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.Resource.StartedAt">
            <summary>
            The resource start time.
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.Resource.StoppedAtFieldNumber">
            <summary>Field number for the "stopped_at" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.Resource.StoppedAt">
            <summary>
            The resource stop time.
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.ResourceCommandResponse.KindFieldNumber">
            <summary>Field number for the "kind" field.</summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.ResourceCommandResponse.ErrorMessageFieldNumber">
            <summary>Field number for the "error_message" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.ResourceCommandResponse.HasErrorMessage">
            <summary>Gets whether the "error_message" field is set</summary>
        </member>
        <member name="M:Aspire.ResourceService.Proto.V1.ResourceCommandResponse.ClearErrorMessage">
            <summary>Clears the value of the "error_message" field</summary>
        </member>
        <member name="T:Aspire.ResourceService.Proto.V1.ResourceServiceReflection">
            <summary>Holder for reflection information generated from resource_service.proto</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.ResourceServiceReflection.Descriptor">
            <summary>File descriptor for resource_service.proto</summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.ApplicationInformationResponse.ApplicationNameFieldNumber">
            <summary>Field number for the "application_name" field.</summary>
        </member>
        <member name="T:Aspire.ResourceService.Proto.V1.ResourceCommand">
            <summary>
            Defines a command that may be invoked on a resource.
            Defined by the resource service and sent to the dashboard.
            When a command is to be executed, an instance of ResourceCommandRequest is constructed
            using data from this message.
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.ResourceCommand.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.ResourceCommand.Name">
            <summary>
            Unique identifier for the command. Not intended for display.
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.ResourceCommand.DisplayNameFieldNumber">
            <summary>Field number for the "display_name" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.ResourceCommand.DisplayName">
            <summary>
            The display name of the command, to be shown in the UI. May be localized.
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.ResourceCommand.ConfirmationMessageFieldNumber">
            <summary>Field number for the "confirmation_message" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.ResourceCommand.ConfirmationMessage">
            <summary>
            When present, this message must be shown to the user and their confirmation obtained
            before sending the request for this command to be executed.
            The user will be presented with Ok/Cancel options.
            </summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.ResourceCommand.HasConfirmationMessage">
            <summary>Gets whether the "confirmation_message" field is set</summary>
        </member>
        <member name="M:Aspire.ResourceService.Proto.V1.ResourceCommand.ClearConfirmationMessage">
            <summary>Clears the value of the "confirmation_message" field</summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.ResourceCommand.ParameterFieldNumber">
            <summary>Field number for the "parameter" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.ResourceCommand.Parameter">
            <summary>
            Optional parameter that configures the command in some way.
            Clients must return any value provided by the server when invoking
            the command.
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.ResourceCommand.IsHighlightedFieldNumber">
            <summary>Field number for the "is_highlighted" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.ResourceCommand.IsHighlighted">
            <summary>
            A flag that indicates whether the command is highlighted in the UI.
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.ResourceCommand.IconNameFieldNumber">
            <summary>Field number for the "icon_name" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.ResourceCommand.IconName">
            <summary>
            Optional icon name. This name should be a valid FluentUI icon name.
            https://aka.ms/fluentui-system-icons
            </summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.ResourceCommand.HasIconName">
            <summary>Gets whether the "icon_name" field is set</summary>
        </member>
        <member name="M:Aspire.ResourceService.Proto.V1.ResourceCommand.ClearIconName">
            <summary>Clears the value of the "icon_name" field</summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.ResourceCommand.IconVariantFieldNumber">
            <summary>Field number for the "icon_variant" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.ResourceCommand.IconVariant">
            <summary>
            Optional icon variant.
            </summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.ResourceCommand.HasIconVariant">
            <summary>Gets whether the "icon_variant" field is set</summary>
        </member>
        <member name="M:Aspire.ResourceService.Proto.V1.ResourceCommand.ClearIconVariant">
            <summary>Clears the value of the "icon_variant" field</summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.ResourceCommand.DisplayDescriptionFieldNumber">
            <summary>Field number for the "display_description" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.ResourceCommand.DisplayDescription">
            <summary>
            Optional description of the command, to be shown in the UI.
            Could be used as a tooltip. May be localized.
            </summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.ResourceCommand.HasDisplayDescription">
            <summary>Gets whether the "display_description" field is set</summary>
        </member>
        <member name="M:Aspire.ResourceService.Proto.V1.ResourceCommand.ClearDisplayDescription">
            <summary>Clears the value of the "display_description" field</summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.ResourceCommand.StateFieldNumber">
            <summary>Field number for the "state" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.ResourceCommand.State">
            <summary>
            The state of the command. Controls whether the command is enabled, disabled,
            or hidden in the UI.
            </summary>
        </member>
        <member name="T:Aspire.ResourceService.Proto.V1.ResourceCommandRequest">
            <summary>
            Represents a request to execute a command.
            Sent by the dashboard to DashboardService.ExecuteResourceCommand.
            Constructed with data from a corresponding ResourceCommand.
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.ResourceCommandRequest.CommandNameFieldNumber">
            <summary>Field number for the "command_name" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.ResourceCommandRequest.CommandName">
            <summary>
            Unique identifier for the command.
            Copied from the ResourceCommand that this request object is initialized from.
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.ResourceCommandRequest.ResourceNameFieldNumber">
            <summary>Field number for the "resource_name" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.ResourceCommandRequest.ResourceName">
            <summary>
            The name of the resource to apply the command to. Matches Resource.name.
            Copied from the ResourceCommand that this request object is initialized from.
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.ResourceCommandRequest.ResourceTypeFieldNumber">
            <summary>Field number for the "resource_type" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.ResourceCommandRequest.ResourceType">
            <summary>
            The unique name of the resource type. Matches ResourceType.unique_name and Resource.resource_type.
            Copied from the ResourceCommand that this request object is initialized from.
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.ResourceCommandRequest.ParameterFieldNumber">
            <summary>Field number for the "parameter" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.ResourceCommandRequest.Parameter">
            <summary>
            An optional parameter to accompany the command.
            Copied from the ResourceCommand that this request object is initialized from.
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.ResourceType.UniqueNameFieldNumber">
            <summary>Field number for the "unique_name" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.ResourceType.UniqueName">
            <summary>
            Unique name for the resource type. Equivalent to Resource.resource_type
            If "display_name" is omitted, this value will be used in UIs.
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.ResourceType.DisplayNameFieldNumber">
            <summary>Field number for the "display_name" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.ResourceType.DisplayName">
            <summary>
            Display string for references to this type in UI. May be localized.
            If this value is omitted, UIs will show "unique_name" instead.
            </summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.ResourceType.HasDisplayName">
            <summary>Gets whether the "display_name" field is set</summary>
        </member>
        <member name="M:Aspire.ResourceService.Proto.V1.ResourceType.ClearDisplayName">
            <summary>Clears the value of the "display_name" field</summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.ResourceType.CommandsFieldNumber">
            <summary>Field number for the "commands" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.ResourceType.Commands">
             <summary>
             Any commands that may be executed against resources of this type, avoiding
             the need to copy the value to every Resource instance.
            
             Note that these commands must apply to matching resources at any time.
            
             If the set of commands changes over time, use the "commands" property
             of the Resource itself.
             </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.EnvironmentVariable.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.EnvironmentVariable.ValueFieldNumber">
            <summary>Field number for the "value" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.EnvironmentVariable.HasValue">
            <summary>Gets whether the "value" field is set</summary>
        </member>
        <member name="M:Aspire.ResourceService.Proto.V1.EnvironmentVariable.ClearValue">
            <summary>Clears the value of the "value" field</summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.EnvironmentVariable.IsFromSpecFieldNumber">
            <summary>Field number for the "is_from_spec" field.</summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.Url.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.Url.Name">
            <summary>
            The name of the url
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.Url.FullUrlFieldNumber">
            <summary>Field number for the "full_url" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.Url.FullUrl">
            <summary>
            The uri of the url. Format is scheme://host:port/{*path}
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.Url.IsInternalFieldNumber">
            <summary>Field number for the "is_internal" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.Url.IsInternal">
            <summary>
            Determines if this url shows up in the details view only by default.
            If true, the url will not be shown in the list of urls in the top level resources view.
            </summary>
        </member>
        <member name="T:Aspire.ResourceService.Proto.V1.Volume">
            <summary>
            Data about a volume mounted to a container.
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.Volume.SourceFieldNumber">
            <summary>Field number for the "source" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.Volume.Source">
            <summary>
            The source of the volume, such as "TestShop.AppHost-postgres-data".
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.Volume.TargetFieldNumber">
            <summary>Field number for the "target" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.Volume.Target">
            <summary>
            The target path in the container, such as "/var/lib/postgresql/data".
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.Volume.MountTypeFieldNumber">
            <summary>Field number for the "mount_type" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.Volume.MountType">
            <summary>
            The type of the mount, such as "bind" or "volume".
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.Volume.IsReadOnlyFieldNumber">
            <summary>Field number for the "is_read_only" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.Volume.IsReadOnly">
            <summary>
            Whether the volume is mounted as read-only or not.
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.HealthReport.StatusFieldNumber">
            <summary>Field number for the "status" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.HealthReport.Status">
            <summary>
            The health status of the resource. Not provided if we have not yet received an initial report from the check.
            </summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.HealthReport.HasStatus">
            <summary>Gets whether the "status" field is set</summary>
        </member>
        <member name="M:Aspire.ResourceService.Proto.V1.HealthReport.ClearStatus">
            <summary>Clears the value of the "status" field</summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.HealthReport.KeyFieldNumber">
            <summary>Field number for the "key" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.HealthReport.Key">
            <summary>
            Identifies the health check that produced this report.
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.HealthReport.DescriptionFieldNumber">
            <summary>Field number for the "description" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.HealthReport.Description">
            <summary>
            The reason for the health status.
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.HealthReport.ExceptionFieldNumber">
            <summary>Field number for the "exception" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.HealthReport.Exception">
            <summary>
            Any exception details.
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.ResourceProperty.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.ResourceProperty.Name">
            <summary>
            Name of the data item, e.g. "container.id", "executable.pid", "project.path", ...
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.ResourceProperty.DisplayNameFieldNumber">
            <summary>Field number for the "display_name" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.ResourceProperty.DisplayName">
            <summary>
            TODO move display_name to reference data, sent once when the connection starts (https://github.com/dotnet/aspire/issues/1644)
            Optional display name, may be localized
            </summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.ResourceProperty.HasDisplayName">
            <summary>Gets whether the "display_name" field is set</summary>
        </member>
        <member name="M:Aspire.ResourceService.Proto.V1.ResourceProperty.ClearDisplayName">
            <summary>Clears the value of the "display_name" field</summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.ResourceProperty.ValueFieldNumber">
            <summary>Field number for the "value" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.ResourceProperty.Value">
            <summary>
            The data value. May be null, a number, a string, a boolean, a dictionary of values (Struct), or a list of values (ValueList).
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.ResourceProperty.IsSensitiveFieldNumber">
            <summary>Field number for the "is_sensitive" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.ResourceProperty.IsSensitive">
            <summary>
            TODO move is_sensitive to reference data, sent once when the connection starts (https://github.com/dotnet/aspire/issues/1644)
            Whether the value is sensitive and should be masked in the UI by default.
            Defaults to false. When true, the user must explicitly unmask the value to view it.
            </summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.ResourceProperty.HasIsSensitive">
            <summary>Gets whether the "is_sensitive" field is set</summary>
        </member>
        <member name="M:Aspire.ResourceService.Proto.V1.ResourceProperty.ClearIsSensitive">
            <summary>Clears the value of the "is_sensitive" field</summary>
        </member>
        <member name="T:Aspire.ResourceService.Proto.V1.InitialResourceData">
            <summary>
            Models a snapshot of resource state
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.InitialResourceData.ResourcesFieldNumber">
            <summary>Field number for the "resources" field.</summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.InitialResourceData.ResourceTypesFieldNumber">
            <summary>Field number for the "resource_types" field.</summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.ResourceDeletion.ResourceNameFieldNumber">
            <summary>Field number for the "resource_name" field.</summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.ResourceDeletion.ResourceTypeFieldNumber">
            <summary>Field number for the "resource_type" field.</summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.WatchResourcesChange.DeleteFieldNumber">
            <summary>Field number for the "delete" field.</summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.WatchResourcesChange.UpsertFieldNumber">
            <summary>Field number for the "upsert" field.</summary>
        </member>
        <member name="T:Aspire.ResourceService.Proto.V1.WatchResourcesChange.KindOneofCase">
            <summary>Enum of possible cases for the "kind" oneof.</summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.WatchResourcesChanges.ValueFieldNumber">
            <summary>Field number for the "value" field.</summary>
        </member>
        <member name="T:Aspire.ResourceService.Proto.V1.WatchResourcesRequest">
            <summary>
            Initiates a subscription for data about resources.
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.WatchResourcesRequest.IsReconnectFieldNumber">
            <summary>Field number for the "is_reconnect" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.WatchResourcesRequest.IsReconnect">
            <summary>
            True if the client is establishing this connection because a prior one closed unexpectedly.
            </summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.WatchResourcesRequest.HasIsReconnect">
            <summary>Gets whether the "is_reconnect" field is set</summary>
        </member>
        <member name="M:Aspire.ResourceService.Proto.V1.WatchResourcesRequest.ClearIsReconnect">
            <summary>Clears the value of the "is_reconnect" field</summary>
        </member>
        <member name="T:Aspire.ResourceService.Proto.V1.WatchResourcesUpdate">
            <summary>
            A message received from the server when watching resources. Has multiple types of payload.
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.WatchResourcesUpdate.InitialDataFieldNumber">
            <summary>Field number for the "initial_data" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.WatchResourcesUpdate.InitialData">
            <summary>
            The current resource state, along with other reference data such as the set of resource types that may exist.
            Received once upon connection, before any changes.
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.WatchResourcesUpdate.ChangesFieldNumber">
            <summary>Field number for the "changes" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.WatchResourcesUpdate.Changes">
            <summary>
            One or more deltas to apply.
            </summary>
        </member>
        <member name="T:Aspire.ResourceService.Proto.V1.WatchResourcesUpdate.KindOneofCase">
            <summary>Enum of possible cases for the "kind" oneof.</summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.ConsoleLogLine.TextFieldNumber">
            <summary>Field number for the "text" field.</summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.ConsoleLogLine.IsStdErrFieldNumber">
            <summary>Field number for the "is_std_err" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.ConsoleLogLine.IsStdErr">
            <summary>
            Indicates whether this line came from STDERR or not.
            </summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.ConsoleLogLine.HasIsStdErr">
            <summary>Gets whether the "is_std_err" field is set</summary>
        </member>
        <member name="M:Aspire.ResourceService.Proto.V1.ConsoleLogLine.ClearIsStdErr">
            <summary>Clears the value of the "is_std_err" field</summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.ConsoleLogLine.LineNumberFieldNumber">
            <summary>Field number for the "line_number" field.</summary>
        </member>
        <member name="T:Aspire.ResourceService.Proto.V1.WatchResourceConsoleLogsRequest">
            <summary>
            Initiates a subscription for the logs of a resource.
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.WatchResourceConsoleLogsRequest.ResourceNameFieldNumber">
            <summary>Field number for the "resource_name" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.WatchResourceConsoleLogsRequest.ResourceName">
            <summary>
            Specifies the resource to watch logs from.
            </summary>
        </member>
        <member name="T:Aspire.ResourceService.Proto.V1.WatchResourceConsoleLogsUpdate">
            <summary>
            A message received from the server when watching resource logs.
            Contains potentially many lines to be appended to the log.
            </summary>
        </member>
        <member name="F:Aspire.ResourceService.Proto.V1.WatchResourceConsoleLogsUpdate.LogLinesFieldNumber">
            <summary>Field number for the "log_lines" field.</summary>
        </member>
        <member name="P:Aspire.ResourceService.Proto.V1.DashboardService.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:Aspire.ResourceService.Proto.V1.DashboardService.DashboardServiceBase">
            <summary>Base class for server-side implementations of DashboardService</summary>
        </member>
        <member name="T:Aspire.ResourceService.Proto.V1.DashboardService.DashboardServiceClient">
            <summary>Client for DashboardService</summary>
        </member>
        <member name="M:Aspire.ResourceService.Proto.V1.DashboardService.DashboardServiceClient.#ctor(Grpc.Core.ChannelBase)">
            <summary>Creates a new client for DashboardService</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:Aspire.ResourceService.Proto.V1.DashboardService.DashboardServiceClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for DashboardService that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:Aspire.ResourceService.Proto.V1.DashboardService.DashboardServiceClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:Aspire.ResourceService.Proto.V1.DashboardService.DashboardServiceClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Aspire.ResourceService.Proto.V1.DashboardService.DashboardServiceClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="M:Aspire.ResourceService.Proto.V1.DashboardService.BindService(Aspire.ResourceService.Proto.V1.DashboardService.DashboardServiceBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:Aspire.ResourceService.Proto.V1.DashboardService.BindService(Grpc.Core.ServiceBinderBase,Aspire.ResourceService.Proto.V1.DashboardService.DashboardServiceBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:Aspire.ChannelExtensions.GetBatchesAsync``1(System.Threading.Channels.Channel{``0},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <summary>
            Reads batches, grabbing all available messages and returning them as one batch before yielding.
            This can give a better downstream experience, as there's less per-item overhead.
            </summary>
            <remarks>
            This sequence adopts the lifetime of <paramref name="channel"/>.
            Callers are required to either use a channel that will complete, or to pass a cancellation
            token which will also cancel the sequence returned by this method.
            </remarks>
            <typeparam name="T">The type of items in the channel and returned batch.</typeparam>
            <param name="channel">The channel to read values from.</param>
            <param name="minReadInterval">The minimum read interval. The enumerable will wait this long before returning the next available result.</param>
            <param name="cancellationToken">A token that signals a loss of interest in the operation.</param>
            <returns></returns>
        </member>
        <member name="M:Aspire.IConfigurationExtensions.GetBool(Microsoft.Extensions.Configuration.IConfiguration,System.String)">
            <summary>
            Gets the named configuration value as a boolean.
            </summary>
            <remarks>
            Parses <c>true</c> and <c>false</c>, along with integer values (where non-zero is <see langword="true"/>).
            </remarks>
            <param name="configuration">The <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/> this method extends.</param>
            <param name="key">The configuration key.</param>
            <returns>The parsed value, or <see langword="null"/> if no value exists or it couldn't be parsed.</returns>
        </member>
        <member name="M:Aspire.IConfigurationExtensions.GetBool(Microsoft.Extensions.Configuration.IConfiguration,System.String,System.Boolean)">
            <summary>
            Gets the named configuration value as a boolean.
            </summary>
            <remarks>
            Parses <c>true</c> and <c>false</c>, along with <c>1</c> and <c>0</c>.
            </remarks>
            <param name="configuration">The <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/> this method extends.</param>
            <param name="key">The configuration key.</param>
            <param name="defaultValue">A default value, for when the configuration value is unspecified or white space.</param>
            <returns></returns>
        </member>
        <member name="M:Aspire.IConfigurationExtensions.GetUri(Microsoft.Extensions.Configuration.IConfiguration,System.String,System.Uri)">
            <summary>
            Parses a configuration value into a <see cref="T:System.Uri"/> object.
            </summary>
            <param name="configuration">The <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/> this method extends.</param>
            <param name="key">The configuration key.</param>
            <param name="defaultValue">A default value, for when the configuration value is unspecified or white space. May be <see langword="null"/>.</param>
            <returns>The parsed value, or the default value if specified and parsing failed. Returns <see langword="null"/> if <paramref name="defaultValue"/> is <see langword="null"/> and parsing failed.</returns>
            <exception cref="T:System.InvalidOperationException">The configuration value could not be accessed, or contained incorrectly formatted data.</exception>
        </member>
        <member name="M:Aspire.IConfigurationExtensions.GetUris(Microsoft.Extensions.Configuration.IConfiguration,System.String,System.Uri)">
            <summary>
            Parses a configuration value's semicolon-delimited value into an array of <see cref="T:System.Uri"/> objects.
            </summary>
            <param name="configuration">The <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/> this method extends.</param>
            <param name="key">The configuration key.</param>
            <param name="defaultValue">A default value, for when the configuration value is unspecified or white space. May be <see langword="null"/>.</param>
            <returns>The parsed values, or the default value if specified and parsing failed. Returns <see langword="null"/> if <paramref name="defaultValue"/> is <see langword="null"/> and parsing failed.</returns>
            <exception cref="T:System.InvalidOperationException">The configuration value could not be accessed, or contained incorrectly formatted data.</exception>
        </member>
        <member name="M:Aspire.IConfigurationExtensions.GetEnum``1(Microsoft.Extensions.Configuration.IConfiguration,System.String,System.Nullable{``0})">
            <summary>
            Gets the named configuration value as a member of an enum, or <paramref name="defaultValue"/> if the value was null or empty.
            </summary>
            <remarks>
            Parsing is case-insensitive.
            </remarks>
            <param name="configuration">The <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/> this method extends.</param>
            <param name="key">The configuration key.</param>
            <param name="defaultValue">A default value, for when the configuration value is unable to be parsed.</param>
            <exception cref="T:System.InvalidOperationException">The configuration value is not a valid member of the enum.</exception>
            <returns>The parsed enum member, or <paramref name="defaultValue"/> the configuration value was null or empty.</returns>
        </member>
        <member name="M:Aspire.IConfigurationExtensions.GetEnum``1(Microsoft.Extensions.Configuration.IConfiguration,System.String)">
            <summary>
            Gets the specified required configuration value as a member of an enum.
            </summary>
            <remarks>
            Parsing is case-insensitive.
            </remarks>
            <param name="configuration">The <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/> this method extends.</param>
            <param name="key">The configuration key.</param>
            <exception cref="T:System.InvalidOperationException">The configuration value is empty or not a valid member of the enum.</exception>
            <returns>The parsed enum member.</returns>
        </member>
        <member name="F:Aspire.KnownFormats.ConsoleLogsTimestampFormat">
            <summary>
            Internal timestamp format that is used to add the timestamp to a log line.
            Preserve second precision and timezone information.
            </summary>
        </member>
        <member name="F:Aspire.KnownFormats.ConsoleLogsUITimestampFormat">
            <summary>
            UI timestamp displayed on the console logs UI.
            </summary>
        </member>
        <member name="T:Aspire.CircularBuffer`1">
            <summary>
            The circular buffer starts with an empty list and grows to a maximum size.
            When the buffer is full, adding or inserting a new item removes the first item in the buffer.
            </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Collector.Logs.V1.LogsServiceReflection">
            <summary>Holder for reflection information generated from opentelemetry/proto/collector/logs/v1/logs_service.proto</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Collector.Logs.V1.LogsServiceReflection.Descriptor">
            <summary>File descriptor for opentelemetry/proto/collector/logs/v1/logs_service.proto</summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Collector.Logs.V1.ExportLogsServiceRequest.ResourceLogsFieldNumber">
            <summary>Field number for the "resource_logs" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Collector.Logs.V1.ExportLogsServiceRequest.ResourceLogs">
            <summary>
            An array of ResourceLogs.
            For data coming from a single resource this array will typically contain one
            element. Intermediary nodes (such as OpenTelemetry Collector) that receive
            data from multiple origins typically batch the data before forwarding further and
            in that case this array will contain multiple elements.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Collector.Logs.V1.ExportLogsServiceResponse.PartialSuccessFieldNumber">
            <summary>Field number for the "partial_success" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Collector.Logs.V1.ExportLogsServiceResponse.PartialSuccess">
             <summary>
             The details of a partially successful export request.
            
             If the request is only partially accepted
             (i.e. when the server accepts only parts of the data and rejects the rest)
             the server MUST initialize the `partial_success` field and MUST
             set the `rejected_&lt;signal>` with the number of items it rejected.
            
             Servers MAY also make use of the `partial_success` field to convey
             warnings/suggestions to senders even when the request was fully accepted.
             In such cases, the `rejected_&lt;signal>` MUST have a value of `0` and
             the `error_message` MUST be non-empty.
            
             A `partial_success` message with an empty value (rejected_&lt;signal> = 0 and
             `error_message` = "") is equivalent to it not being set/present. Senders
             SHOULD interpret it the same way as in the full success case.
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Collector.Logs.V1.ExportLogsPartialSuccess.RejectedLogRecordsFieldNumber">
            <summary>Field number for the "rejected_log_records" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Collector.Logs.V1.ExportLogsPartialSuccess.RejectedLogRecords">
             <summary>
             The number of rejected log records.
            
             A `rejected_&lt;signal>` field holding a `0` value indicates that the
             request was fully accepted.
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Collector.Logs.V1.ExportLogsPartialSuccess.ErrorMessageFieldNumber">
            <summary>Field number for the "error_message" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Collector.Logs.V1.ExportLogsPartialSuccess.ErrorMessage">
             <summary>
             A developer-facing human-readable message in English. It should be used
             either to explain why the server rejected parts of the data during a partial
             success or to convey warnings/suggestions during a full success. The message
             should offer guidance on how users can address such issues.
            
             error_message is an optional field. An error_message with an empty value
             is equivalent to it not being set.
             </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Collector.Logs.V1.LogsService">
            <summary>
            Service that can be used to push logs between one Application instrumented with
            OpenTelemetry and an collector, or between an collector and a central collector (in this
            case logs are sent/received to/from multiple Applications).
            </summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Collector.Logs.V1.LogsService.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Collector.Logs.V1.LogsService.LogsServiceBase">
            <summary>Base class for server-side implementations of LogsService</summary>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Logs.V1.LogsService.LogsServiceBase.Export(OpenTelemetry.Proto.Collector.Logs.V1.ExportLogsServiceRequest,Grpc.Core.ServerCallContext)">
            <summary>
            For performance reasons, it is recommended to keep this RPC
            alive for the entire life of the application.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="T:OpenTelemetry.Proto.Collector.Logs.V1.LogsService.LogsServiceClient">
            <summary>Client for LogsService</summary>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Logs.V1.LogsService.LogsServiceClient.#ctor(Grpc.Core.ChannelBase)">
            <summary>Creates a new client for LogsService</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Logs.V1.LogsService.LogsServiceClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for LogsService that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Logs.V1.LogsService.LogsServiceClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Logs.V1.LogsService.LogsServiceClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Logs.V1.LogsService.LogsServiceClient.Export(OpenTelemetry.Proto.Collector.Logs.V1.ExportLogsServiceRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            For performance reasons, it is recommended to keep this RPC
            alive for the entire life of the application.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Logs.V1.LogsService.LogsServiceClient.Export(OpenTelemetry.Proto.Collector.Logs.V1.ExportLogsServiceRequest,Grpc.Core.CallOptions)">
            <summary>
            For performance reasons, it is recommended to keep this RPC
            alive for the entire life of the application.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Logs.V1.LogsService.LogsServiceClient.ExportAsync(OpenTelemetry.Proto.Collector.Logs.V1.ExportLogsServiceRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            For performance reasons, it is recommended to keep this RPC
            alive for the entire life of the application.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Logs.V1.LogsService.LogsServiceClient.ExportAsync(OpenTelemetry.Proto.Collector.Logs.V1.ExportLogsServiceRequest,Grpc.Core.CallOptions)">
            <summary>
            For performance reasons, it is recommended to keep this RPC
            alive for the entire life of the application.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Logs.V1.LogsService.LogsServiceClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Logs.V1.LogsService.BindService(OpenTelemetry.Proto.Collector.Logs.V1.LogsService.LogsServiceBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Logs.V1.LogsService.BindService(Grpc.Core.ServiceBinderBase,OpenTelemetry.Proto.Collector.Logs.V1.LogsService.LogsServiceBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="T:OpenTelemetry.Proto.Collector.Metrics.V1.MetricsServiceReflection">
            <summary>Holder for reflection information generated from opentelemetry/proto/collector/metrics/v1/metrics_service.proto</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Collector.Metrics.V1.MetricsServiceReflection.Descriptor">
            <summary>File descriptor for opentelemetry/proto/collector/metrics/v1/metrics_service.proto</summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Collector.Metrics.V1.ExportMetricsServiceRequest.ResourceMetricsFieldNumber">
            <summary>Field number for the "resource_metrics" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Collector.Metrics.V1.ExportMetricsServiceRequest.ResourceMetrics">
            <summary>
            An array of ResourceMetrics.
            For data coming from a single resource this array will typically contain one
            element. Intermediary nodes (such as OpenTelemetry Collector) that receive
            data from multiple origins typically batch the data before forwarding further and
            in that case this array will contain multiple elements.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Collector.Metrics.V1.ExportMetricsServiceResponse.PartialSuccessFieldNumber">
            <summary>Field number for the "partial_success" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Collector.Metrics.V1.ExportMetricsServiceResponse.PartialSuccess">
             <summary>
             The details of a partially successful export request.
            
             If the request is only partially accepted
             (i.e. when the server accepts only parts of the data and rejects the rest)
             the server MUST initialize the `partial_success` field and MUST
             set the `rejected_&lt;signal>` with the number of items it rejected.
            
             Servers MAY also make use of the `partial_success` field to convey
             warnings/suggestions to senders even when the request was fully accepted.
             In such cases, the `rejected_&lt;signal>` MUST have a value of `0` and
             the `error_message` MUST be non-empty.
            
             A `partial_success` message with an empty value (rejected_&lt;signal> = 0 and
             `error_message` = "") is equivalent to it not being set/present. Senders
             SHOULD interpret it the same way as in the full success case.
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Collector.Metrics.V1.ExportMetricsPartialSuccess.RejectedDataPointsFieldNumber">
            <summary>Field number for the "rejected_data_points" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Collector.Metrics.V1.ExportMetricsPartialSuccess.RejectedDataPoints">
             <summary>
             The number of rejected data points.
            
             A `rejected_&lt;signal>` field holding a `0` value indicates that the
             request was fully accepted.
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Collector.Metrics.V1.ExportMetricsPartialSuccess.ErrorMessageFieldNumber">
            <summary>Field number for the "error_message" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Collector.Metrics.V1.ExportMetricsPartialSuccess.ErrorMessage">
             <summary>
             A developer-facing human-readable message in English. It should be used
             either to explain why the server rejected parts of the data during a partial
             success or to convey warnings/suggestions during a full success. The message
             should offer guidance on how users can address such issues.
            
             error_message is an optional field. An error_message with an empty value
             is equivalent to it not being set.
             </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Collector.Metrics.V1.MetricsService">
            <summary>
            Service that can be used to push metrics between one Application
            instrumented with OpenTelemetry and a collector, or between a collector and a
            central collector.
            </summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Collector.Metrics.V1.MetricsService.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Collector.Metrics.V1.MetricsService.MetricsServiceBase">
            <summary>Base class for server-side implementations of MetricsService</summary>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Metrics.V1.MetricsService.MetricsServiceBase.Export(OpenTelemetry.Proto.Collector.Metrics.V1.ExportMetricsServiceRequest,Grpc.Core.ServerCallContext)">
            <summary>
            For performance reasons, it is recommended to keep this RPC
            alive for the entire life of the application.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="T:OpenTelemetry.Proto.Collector.Metrics.V1.MetricsService.MetricsServiceClient">
            <summary>Client for MetricsService</summary>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Metrics.V1.MetricsService.MetricsServiceClient.#ctor(Grpc.Core.ChannelBase)">
            <summary>Creates a new client for MetricsService</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Metrics.V1.MetricsService.MetricsServiceClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for MetricsService that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Metrics.V1.MetricsService.MetricsServiceClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Metrics.V1.MetricsService.MetricsServiceClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Metrics.V1.MetricsService.MetricsServiceClient.Export(OpenTelemetry.Proto.Collector.Metrics.V1.ExportMetricsServiceRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            For performance reasons, it is recommended to keep this RPC
            alive for the entire life of the application.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Metrics.V1.MetricsService.MetricsServiceClient.Export(OpenTelemetry.Proto.Collector.Metrics.V1.ExportMetricsServiceRequest,Grpc.Core.CallOptions)">
            <summary>
            For performance reasons, it is recommended to keep this RPC
            alive for the entire life of the application.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Metrics.V1.MetricsService.MetricsServiceClient.ExportAsync(OpenTelemetry.Proto.Collector.Metrics.V1.ExportMetricsServiceRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            For performance reasons, it is recommended to keep this RPC
            alive for the entire life of the application.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Metrics.V1.MetricsService.MetricsServiceClient.ExportAsync(OpenTelemetry.Proto.Collector.Metrics.V1.ExportMetricsServiceRequest,Grpc.Core.CallOptions)">
            <summary>
            For performance reasons, it is recommended to keep this RPC
            alive for the entire life of the application.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Metrics.V1.MetricsService.MetricsServiceClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Metrics.V1.MetricsService.BindService(OpenTelemetry.Proto.Collector.Metrics.V1.MetricsService.MetricsServiceBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Metrics.V1.MetricsService.BindService(Grpc.Core.ServiceBinderBase,OpenTelemetry.Proto.Collector.Metrics.V1.MetricsService.MetricsServiceBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="T:OpenTelemetry.Proto.Collector.Trace.V1.TraceServiceReflection">
            <summary>Holder for reflection information generated from opentelemetry/proto/collector/trace/v1/trace_service.proto</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Collector.Trace.V1.TraceServiceReflection.Descriptor">
            <summary>File descriptor for opentelemetry/proto/collector/trace/v1/trace_service.proto</summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Collector.Trace.V1.ExportTraceServiceRequest.ResourceSpansFieldNumber">
            <summary>Field number for the "resource_spans" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Collector.Trace.V1.ExportTraceServiceRequest.ResourceSpans">
            <summary>
            An array of ResourceSpans.
            For data coming from a single resource this array will typically contain one
            element. Intermediary nodes (such as OpenTelemetry Collector) that receive
            data from multiple origins typically batch the data before forwarding further and
            in that case this array will contain multiple elements.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Collector.Trace.V1.ExportTraceServiceResponse.PartialSuccessFieldNumber">
            <summary>Field number for the "partial_success" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Collector.Trace.V1.ExportTraceServiceResponse.PartialSuccess">
             <summary>
             The details of a partially successful export request.
            
             If the request is only partially accepted
             (i.e. when the server accepts only parts of the data and rejects the rest)
             the server MUST initialize the `partial_success` field and MUST
             set the `rejected_&lt;signal>` with the number of items it rejected.
            
             Servers MAY also make use of the `partial_success` field to convey
             warnings/suggestions to senders even when the request was fully accepted.
             In such cases, the `rejected_&lt;signal>` MUST have a value of `0` and
             the `error_message` MUST be non-empty.
            
             A `partial_success` message with an empty value (rejected_&lt;signal> = 0 and
             `error_message` = "") is equivalent to it not being set/present. Senders
             SHOULD interpret it the same way as in the full success case.
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Collector.Trace.V1.ExportTracePartialSuccess.RejectedSpansFieldNumber">
            <summary>Field number for the "rejected_spans" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Collector.Trace.V1.ExportTracePartialSuccess.RejectedSpans">
             <summary>
             The number of rejected spans.
            
             A `rejected_&lt;signal>` field holding a `0` value indicates that the
             request was fully accepted.
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Collector.Trace.V1.ExportTracePartialSuccess.ErrorMessageFieldNumber">
            <summary>Field number for the "error_message" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Collector.Trace.V1.ExportTracePartialSuccess.ErrorMessage">
             <summary>
             A developer-facing human-readable message in English. It should be used
             either to explain why the server rejected parts of the data during a partial
             success or to convey warnings/suggestions during a full success. The message
             should offer guidance on how users can address such issues.
            
             error_message is an optional field. An error_message with an empty value
             is equivalent to it not being set.
             </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Collector.Trace.V1.TraceService">
            <summary>
            Service that can be used to push spans between one Application instrumented with
            OpenTelemetry and a collector, or between a collector and a central collector (in this
            case spans are sent/received to/from multiple Applications).
            </summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Collector.Trace.V1.TraceService.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Collector.Trace.V1.TraceService.TraceServiceBase">
            <summary>Base class for server-side implementations of TraceService</summary>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Trace.V1.TraceService.TraceServiceBase.Export(OpenTelemetry.Proto.Collector.Trace.V1.ExportTraceServiceRequest,Grpc.Core.ServerCallContext)">
            <summary>
            For performance reasons, it is recommended to keep this RPC
            alive for the entire life of the application.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="T:OpenTelemetry.Proto.Collector.Trace.V1.TraceService.TraceServiceClient">
            <summary>Client for TraceService</summary>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Trace.V1.TraceService.TraceServiceClient.#ctor(Grpc.Core.ChannelBase)">
            <summary>Creates a new client for TraceService</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Trace.V1.TraceService.TraceServiceClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for TraceService that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Trace.V1.TraceService.TraceServiceClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Trace.V1.TraceService.TraceServiceClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Trace.V1.TraceService.TraceServiceClient.Export(OpenTelemetry.Proto.Collector.Trace.V1.ExportTraceServiceRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            For performance reasons, it is recommended to keep this RPC
            alive for the entire life of the application.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Trace.V1.TraceService.TraceServiceClient.Export(OpenTelemetry.Proto.Collector.Trace.V1.ExportTraceServiceRequest,Grpc.Core.CallOptions)">
            <summary>
            For performance reasons, it is recommended to keep this RPC
            alive for the entire life of the application.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Trace.V1.TraceService.TraceServiceClient.ExportAsync(OpenTelemetry.Proto.Collector.Trace.V1.ExportTraceServiceRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            For performance reasons, it is recommended to keep this RPC
            alive for the entire life of the application.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Trace.V1.TraceService.TraceServiceClient.ExportAsync(OpenTelemetry.Proto.Collector.Trace.V1.ExportTraceServiceRequest,Grpc.Core.CallOptions)">
            <summary>
            For performance reasons, it is recommended to keep this RPC
            alive for the entire life of the application.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Trace.V1.TraceService.TraceServiceClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Trace.V1.TraceService.BindService(OpenTelemetry.Proto.Collector.Trace.V1.TraceService.TraceServiceBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:OpenTelemetry.Proto.Collector.Trace.V1.TraceService.BindService(Grpc.Core.ServiceBinderBase,OpenTelemetry.Proto.Collector.Trace.V1.TraceService.TraceServiceBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="T:OpenTelemetry.Proto.Common.V1.CommonReflection">
            <summary>Holder for reflection information generated from opentelemetry/proto/common/v1/common.proto</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Common.V1.CommonReflection.Descriptor">
            <summary>File descriptor for opentelemetry/proto/common/v1/common.proto</summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Common.V1.AnyValue">
            <summary>
            AnyValue is used to represent any type of attribute value. AnyValue may contain a
            primitive value such as a string or integer or it may contain an arbitrary nested
            object containing arrays, key-value lists and primitives.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Common.V1.AnyValue.StringValueFieldNumber">
            <summary>Field number for the "string_value" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Common.V1.AnyValue.HasStringValue">
            <summary>Gets whether the "string_value" field is set</summary>
        </member>
        <member name="M:OpenTelemetry.Proto.Common.V1.AnyValue.ClearStringValue">
            <summary> Clears the value of the oneof if it's currently set to "string_value" </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Common.V1.AnyValue.BoolValueFieldNumber">
            <summary>Field number for the "bool_value" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Common.V1.AnyValue.HasBoolValue">
            <summary>Gets whether the "bool_value" field is set</summary>
        </member>
        <member name="M:OpenTelemetry.Proto.Common.V1.AnyValue.ClearBoolValue">
            <summary> Clears the value of the oneof if it's currently set to "bool_value" </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Common.V1.AnyValue.IntValueFieldNumber">
            <summary>Field number for the "int_value" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Common.V1.AnyValue.HasIntValue">
            <summary>Gets whether the "int_value" field is set</summary>
        </member>
        <member name="M:OpenTelemetry.Proto.Common.V1.AnyValue.ClearIntValue">
            <summary> Clears the value of the oneof if it's currently set to "int_value" </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Common.V1.AnyValue.DoubleValueFieldNumber">
            <summary>Field number for the "double_value" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Common.V1.AnyValue.HasDoubleValue">
            <summary>Gets whether the "double_value" field is set</summary>
        </member>
        <member name="M:OpenTelemetry.Proto.Common.V1.AnyValue.ClearDoubleValue">
            <summary> Clears the value of the oneof if it's currently set to "double_value" </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Common.V1.AnyValue.ArrayValueFieldNumber">
            <summary>Field number for the "array_value" field.</summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Common.V1.AnyValue.KvlistValueFieldNumber">
            <summary>Field number for the "kvlist_value" field.</summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Common.V1.AnyValue.BytesValueFieldNumber">
            <summary>Field number for the "bytes_value" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Common.V1.AnyValue.HasBytesValue">
            <summary>Gets whether the "bytes_value" field is set</summary>
        </member>
        <member name="M:OpenTelemetry.Proto.Common.V1.AnyValue.ClearBytesValue">
            <summary> Clears the value of the oneof if it's currently set to "bytes_value" </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Common.V1.AnyValue.ValueOneofCase">
            <summary>Enum of possible cases for the "value" oneof.</summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Common.V1.ArrayValue">
            <summary>
            ArrayValue is a list of AnyValue messages. We need ArrayValue as a message
            since oneof in AnyValue does not allow repeated fields.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Common.V1.ArrayValue.ValuesFieldNumber">
            <summary>Field number for the "values" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Common.V1.ArrayValue.Values">
            <summary>
            Array of values. The array may be empty (contain 0 elements).
            </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Common.V1.KeyValueList">
            <summary>
            KeyValueList is a list of KeyValue messages. We need KeyValueList as a message
            since `oneof` in AnyValue does not allow repeated fields. Everywhere else where we need
            a list of KeyValue messages (e.g. in Span) we use `repeated KeyValue` directly to
            avoid unnecessary extra wrapping (which slows down the protocol). The 2 approaches
            are semantically equivalent.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Common.V1.KeyValueList.ValuesFieldNumber">
            <summary>Field number for the "values" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Common.V1.KeyValueList.Values">
            <summary>
            A collection of key/value pairs of key-value pairs. The list may be empty (may
            contain 0 elements).
            The keys MUST be unique (it is not allowed to have more than one
            value with the same key).
            </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Common.V1.KeyValue">
            <summary>
            KeyValue is a key-value pair that is used to store Span attributes, Link
            attributes, etc.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Common.V1.KeyValue.KeyFieldNumber">
            <summary>Field number for the "key" field.</summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Common.V1.KeyValue.ValueFieldNumber">
            <summary>Field number for the "value" field.</summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Common.V1.InstrumentationScope">
            <summary>
            InstrumentationScope is a message representing the instrumentation scope information
            such as the fully qualified name and version. 
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Common.V1.InstrumentationScope.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Common.V1.InstrumentationScope.Name">
            <summary>
            An empty instrumentation scope name means the name is unknown.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Common.V1.InstrumentationScope.VersionFieldNumber">
            <summary>Field number for the "version" field.</summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Common.V1.InstrumentationScope.AttributesFieldNumber">
            <summary>Field number for the "attributes" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Common.V1.InstrumentationScope.Attributes">
            <summary>
            Additional attributes that describe the scope. [Optional].
            Attribute keys MUST be unique (it is not allowed to have more than one
            attribute with the same key).
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Common.V1.InstrumentationScope.DroppedAttributesCountFieldNumber">
            <summary>Field number for the "dropped_attributes_count" field.</summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Logs.V1.LogsReflection">
            <summary>Holder for reflection information generated from opentelemetry/proto/logs/v1/logs.proto</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Logs.V1.LogsReflection.Descriptor">
            <summary>File descriptor for opentelemetry/proto/logs/v1/logs.proto</summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Logs.V1.SeverityNumber">
            <summary>
            Possible values for LogRecord.SeverityNumber.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Logs.V1.SeverityNumber.Unspecified">
            <summary>
            UNSPECIFIED is the default SeverityNumber, it MUST NOT be used.
            </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Logs.V1.LogRecordFlags">
             <summary>
             LogRecordFlags is defined as a protobuf 'uint32' type and is to be used as
             bit-fields. Each non-zero value defined in this enum is a bit-mask.
             To extract the bit-field, for example, use an expression like:
            
               (logRecord.flags &amp; LOG_RECORD_FLAGS_TRACE_FLAGS_MASK)
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Logs.V1.LogRecordFlags.DoNotUse">
            <summary>
            The zero value for the enum. Should not be used for comparisons.
            Instead use bitwise "and" with the appropriate mask as shown above.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Logs.V1.LogRecordFlags.TraceFlagsMask">
            <summary>
            Bits 0-7 are used for trace flags.
            </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Logs.V1.LogsData">
             <summary>
             LogsData represents the logs data that can be stored in a persistent storage,
             OR can be embedded by other protocols that transfer OTLP logs data but do not
             implement the OTLP protocol.
            
             The main difference between this message and collector protocol is that
             in this message there will not be any "control" or "metadata" specific to
             OTLP protocol.
            
             When new fields are added into this message, the OTLP request MUST be updated
             as well.
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Logs.V1.LogsData.ResourceLogsFieldNumber">
            <summary>Field number for the "resource_logs" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Logs.V1.LogsData.ResourceLogs">
            <summary>
            An array of ResourceLogs.
            For data coming from a single resource this array will typically contain
            one element. Intermediary nodes that receive data from multiple origins
            typically batch the data before forwarding further and in that case this
            array will contain multiple elements.
            </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Logs.V1.ResourceLogs">
            <summary>
            A collection of ScopeLogs from a Resource.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Logs.V1.ResourceLogs.ResourceFieldNumber">
            <summary>Field number for the "resource" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Logs.V1.ResourceLogs.Resource">
            <summary>
            The resource for the logs in this message.
            If this field is not set then resource info is unknown.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Logs.V1.ResourceLogs.ScopeLogsFieldNumber">
            <summary>Field number for the "scope_logs" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Logs.V1.ResourceLogs.ScopeLogs">
            <summary>
            A list of ScopeLogs that originate from a resource.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Logs.V1.ResourceLogs.SchemaUrlFieldNumber">
            <summary>Field number for the "schema_url" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Logs.V1.ResourceLogs.SchemaUrl">
            <summary>
            This schema_url applies to the data in the "resource" field. It does not apply
            to the data in the "scope_logs" field which have their own schema_url field.
            </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Logs.V1.ScopeLogs">
            <summary>
            A collection of Logs produced by a Scope.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Logs.V1.ScopeLogs.ScopeFieldNumber">
            <summary>Field number for the "scope" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Logs.V1.ScopeLogs.Scope">
            <summary>
            The instrumentation scope information for the logs in this message.
            Semantically when InstrumentationScope isn't set, it is equivalent with
            an empty instrumentation scope name (unknown).
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Logs.V1.ScopeLogs.LogRecordsFieldNumber">
            <summary>Field number for the "log_records" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Logs.V1.ScopeLogs.LogRecords">
            <summary>
            A list of log records.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Logs.V1.ScopeLogs.SchemaUrlFieldNumber">
            <summary>Field number for the "schema_url" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Logs.V1.ScopeLogs.SchemaUrl">
            <summary>
            This schema_url applies to all logs in the "logs" field.
            </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Logs.V1.LogRecord">
            <summary>
            A log record according to OpenTelemetry Log Data Model:
            https://github.com/open-telemetry/oteps/blob/main/text/logs/0097-log-data-model.md
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Logs.V1.LogRecord.TimeUnixNanoFieldNumber">
            <summary>Field number for the "time_unix_nano" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Logs.V1.LogRecord.TimeUnixNano">
            <summary>
            time_unix_nano is the time when the event occurred.
            Value is UNIX Epoch time in nanoseconds since 00:00:00 UTC on 1 January 1970.
            Value of 0 indicates unknown or missing timestamp.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Logs.V1.LogRecord.ObservedTimeUnixNanoFieldNumber">
            <summary>Field number for the "observed_time_unix_nano" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Logs.V1.LogRecord.ObservedTimeUnixNano">
             <summary>
             Time when the event was observed by the collection system.
             For events that originate in OpenTelemetry (e.g. using OpenTelemetry Logging SDK)
             this timestamp is typically set at the generation time and is equal to Timestamp.
             For events originating externally and collected by OpenTelemetry (e.g. using
             Collector) this is the time when OpenTelemetry's code observed the event measured
             by the clock of the OpenTelemetry code. This field MUST be set once the event is
             observed by OpenTelemetry.
            
             For converting OpenTelemetry log data to formats that support only one timestamp or
             when receiving OpenTelemetry log data by recipients that support only one timestamp
             internally the following logic is recommended:
               - Use time_unix_nano if it is present, otherwise use observed_time_unix_nano.
            
             Value is UNIX Epoch time in nanoseconds since 00:00:00 UTC on 1 January 1970.
             Value of 0 indicates unknown or missing timestamp.
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Logs.V1.LogRecord.SeverityNumberFieldNumber">
            <summary>Field number for the "severity_number" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Logs.V1.LogRecord.SeverityNumber">
            <summary>
            Numerical value of the severity, normalized to values described in Log Data Model.
            [Optional].
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Logs.V1.LogRecord.SeverityTextFieldNumber">
            <summary>Field number for the "severity_text" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Logs.V1.LogRecord.SeverityText">
            <summary>
            The severity text (also known as log level). The original string representation as
            it is known at the source. [Optional].
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Logs.V1.LogRecord.BodyFieldNumber">
            <summary>Field number for the "body" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Logs.V1.LogRecord.Body">
            <summary>
            A value containing the body of the log record. Can be for example a human-readable
            string message (including multi-line) describing the event in a free form or it can
            be a structured data composed of arrays and maps of other values. [Optional].
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Logs.V1.LogRecord.AttributesFieldNumber">
            <summary>Field number for the "attributes" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Logs.V1.LogRecord.Attributes">
            <summary>
            Additional attributes that describe the specific event occurrence. [Optional].
            Attribute keys MUST be unique (it is not allowed to have more than one
            attribute with the same key).
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Logs.V1.LogRecord.DroppedAttributesCountFieldNumber">
            <summary>Field number for the "dropped_attributes_count" field.</summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Logs.V1.LogRecord.FlagsFieldNumber">
            <summary>Field number for the "flags" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Logs.V1.LogRecord.Flags">
            <summary>
            Flags, a bit field. 8 least significant bits are the trace flags as
            defined in W3C Trace Context specification. 24 most significant bits are reserved
            and must be set to 0. Readers must not assume that 24 most significant bits
            will be zero and must correctly mask the bits when reading 8-bit trace flag (use
            flags &amp; LOG_RECORD_FLAGS_TRACE_FLAGS_MASK). [Optional].
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Logs.V1.LogRecord.TraceIdFieldNumber">
            <summary>Field number for the "trace_id" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Logs.V1.LogRecord.TraceId">
             <summary>
             A unique identifier for a trace. All logs from the same trace share
             the same `trace_id`. The ID is a 16-byte array. An ID with all zeroes OR
             of length other than 16 bytes is considered invalid (empty string in OTLP/JSON
             is zero-length and thus is also invalid).
            
             This field is optional.
            
             The receivers SHOULD assume that the log record is not associated with a
             trace if any of the following is true:
               - the field is not present,
               - the field contains an invalid value.
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Logs.V1.LogRecord.SpanIdFieldNumber">
            <summary>Field number for the "span_id" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Logs.V1.LogRecord.SpanId">
             <summary>
             A unique identifier for a span within a trace, assigned when the span
             is created. The ID is an 8-byte array. An ID with all zeroes OR of length
             other than 8 bytes is considered invalid (empty string in OTLP/JSON
             is zero-length and thus is also invalid).
            
             This field is optional. If the sender specifies a valid span_id then it SHOULD also
             specify a valid trace_id.
            
             The receivers SHOULD assume that the log record is not associated with a
             span if any of the following is true:
               - the field is not present,
               - the field contains an invalid value.
             </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Metrics.V1.MetricsReflection">
            <summary>Holder for reflection information generated from opentelemetry/proto/metrics/v1/metrics.proto</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.MetricsReflection.Descriptor">
            <summary>File descriptor for opentelemetry/proto/metrics/v1/metrics.proto</summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Metrics.V1.AggregationTemporality">
            <summary>
            AggregationTemporality defines how a metric aggregator reports aggregated
            values. It describes how those values relate to the time interval over
            which they are aggregated.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.AggregationTemporality.Unspecified">
            <summary>
            UNSPECIFIED is the default AggregationTemporality, it MUST not be used.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.AggregationTemporality.Delta">
             <summary>
             DELTA is an AggregationTemporality for a metric aggregator which reports
             changes since last report time. Successive metrics contain aggregation of
             values from continuous and non-overlapping intervals.
            
             The values for a DELTA metric are based only on the time interval
             associated with one measurement cycle. There is no dependency on
             previous measurements like is the case for CUMULATIVE metrics.
            
             For example, consider a system measuring the number of requests that
             it receives and reports the sum of these requests every second as a
             DELTA metric:
            
               1. The system starts receiving at time=t_0.
               2. A request is received, the system measures 1 request.
               3. A request is received, the system measures 1 request.
               4. A request is received, the system measures 1 request.
               5. The 1 second collection cycle ends. A metric is exported for the
                  number of requests received over the interval of time t_0 to
                  t_0+1 with a value of 3.
               6. A request is received, the system measures 1 request.
               7. A request is received, the system measures 1 request.
               8. The 1 second collection cycle ends. A metric is exported for the
                  number of requests received over the interval of time t_0+1 to
                  t_0+2 with a value of 2.
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.AggregationTemporality.Cumulative">
             <summary>
             CUMULATIVE is an AggregationTemporality for a metric aggregator which
             reports changes since a fixed start time. This means that current values
             of a CUMULATIVE metric depend on all previous measurements since the
             start time. Because of this, the sender is required to retain this state
             in some form. If this state is lost or invalidated, the CUMULATIVE metric
             values MUST be reset and a new fixed start time following the last
             reported measurement time sent MUST be used.
            
             For example, consider a system measuring the number of requests that
             it receives and reports the sum of these requests every second as a
             CUMULATIVE metric:
            
               1. The system starts receiving at time=t_0.
               2. A request is received, the system measures 1 request.
               3. A request is received, the system measures 1 request.
               4. A request is received, the system measures 1 request.
               5. The 1 second collection cycle ends. A metric is exported for the
                  number of requests received over the interval of time t_0 to
                  t_0+1 with a value of 3.
               6. A request is received, the system measures 1 request.
               7. A request is received, the system measures 1 request.
               8. The 1 second collection cycle ends. A metric is exported for the
                  number of requests received over the interval of time t_0 to
                  t_0+2 with a value of 5.
               9. The system experiences a fault and loses state.
               10. The system recovers and resumes receiving at time=t_1.
               11. A request is received, the system measures 1 request.
               12. The 1 second collection cycle ends. A metric is exported for the
                  number of requests received over the interval of time t_1 to
                  t_0+1 with a value of 1.
            
             Note: Even though, when reporting changes since last report time, using
             CUMULATIVE is valid, it is not recommended. This may cause problems for
             systems that do not use start_time to determine when the aggregation
             value was reset (e.g. Prometheus).
             </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Metrics.V1.DataPointFlags">
             <summary>
             DataPointFlags is defined as a protobuf 'uint32' type and is to be used as a
             bit-field representing 32 distinct boolean flags.  Each flag defined in this
             enum is a bit-mask.  To test the presence of a single flag in the flags of
             a data point, for example, use an expression like:
            
               (point.flags &amp; DATA_POINT_FLAGS_NO_RECORDED_VALUE_MASK) == DATA_POINT_FLAGS_NO_RECORDED_VALUE_MASK
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.DataPointFlags.DoNotUse">
            <summary>
            The zero value for the enum. Should not be used for comparisons.
            Instead use bitwise "and" with the appropriate mask as shown above.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.DataPointFlags.NoRecordedValueMask">
            <summary>
            This DataPoint is valid but has no recorded value.  This value
            SHOULD be used to reflect explicitly missing data in a series, as
            for an equivalent to the Prometheus "staleness marker".
            </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Metrics.V1.MetricsData">
             <summary>
             MetricsData represents the metrics data that can be stored in a persistent
             storage, OR can be embedded by other protocols that transfer OTLP metrics
             data but do not implement the OTLP protocol.
            
             The main difference between this message and collector protocol is that
             in this message there will not be any "control" or "metadata" specific to
             OTLP protocol.
            
             When new fields are added into this message, the OTLP request MUST be updated
             as well.
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.MetricsData.ResourceMetricsFieldNumber">
            <summary>Field number for the "resource_metrics" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.MetricsData.ResourceMetrics">
            <summary>
            An array of ResourceMetrics.
            For data coming from a single resource this array will typically contain
            one element. Intermediary nodes that receive data from multiple origins
            typically batch the data before forwarding further and in that case this
            array will contain multiple elements.
            </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Metrics.V1.ResourceMetrics">
            <summary>
            A collection of ScopeMetrics from a Resource.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.ResourceMetrics.ResourceFieldNumber">
            <summary>Field number for the "resource" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.ResourceMetrics.Resource">
            <summary>
            The resource for the metrics in this message.
            If this field is not set then no resource info is known.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.ResourceMetrics.ScopeMetricsFieldNumber">
            <summary>Field number for the "scope_metrics" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.ResourceMetrics.ScopeMetrics">
            <summary>
            A list of metrics that originate from a resource.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.ResourceMetrics.SchemaUrlFieldNumber">
            <summary>Field number for the "schema_url" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.ResourceMetrics.SchemaUrl">
            <summary>
            This schema_url applies to the data in the "resource" field. It does not apply
            to the data in the "scope_metrics" field which have their own schema_url field.
            </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Metrics.V1.ScopeMetrics">
            <summary>
            A collection of Metrics produced by an Scope.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.ScopeMetrics.ScopeFieldNumber">
            <summary>Field number for the "scope" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.ScopeMetrics.Scope">
            <summary>
            The instrumentation scope information for the metrics in this message.
            Semantically when InstrumentationScope isn't set, it is equivalent with
            an empty instrumentation scope name (unknown).
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.ScopeMetrics.MetricsFieldNumber">
            <summary>Field number for the "metrics" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.ScopeMetrics.Metrics">
            <summary>
            A list of metrics that originate from an instrumentation library.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.ScopeMetrics.SchemaUrlFieldNumber">
            <summary>Field number for the "schema_url" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.ScopeMetrics.SchemaUrl">
            <summary>
            This schema_url applies to all metrics in the "metrics" field.
            </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Metrics.V1.Metric">
             <summary>
             Defines a Metric which has one or more timeseries.  The following is a
             brief summary of the Metric data model.  For more details, see:
            
               https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/metrics/data-model.md
            
             The data model and relation between entities is shown in the
             diagram below. Here, "DataPoint" is the term used to refer to any
             one of the specific data point value types, and "points" is the term used
             to refer to any one of the lists of points contained in the Metric.
            
             - Metric is composed of a metadata and data.
             - Metadata part contains a name, description, unit.
             - Data is one of the possible types (Sum, Gauge, Histogram, Summary).
             - DataPoint contains timestamps, attributes, and one of the possible value type
               fields.
            
                 Metric
              +------------+
              |name        |
              |description |
              |unit        |     +------------------------------------+
              |data        |---> |Gauge, Sum, Histogram, Summary, ... |
              +------------+     +------------------------------------+
            
                Data [One of Gauge, Sum, Histogram, Summary, ...]
              +-----------+
              |...        |  // Metadata about the Data.
              |points     |--+
              +-----------+  |
                             |      +---------------------------+
                             |      |DataPoint 1                |
                             v      |+------+------+   +------+ |
                          +-----+   ||label |label |...|label | |
                          |  1  |-->||value1|value2|...|valueN| |
                          +-----+   |+------+------+   +------+ |
                          |  .  |   |+-----+                    |
                          |  .  |   ||value|                    |
                          |  .  |   |+-----+                    |
                          |  .  |   +---------------------------+
                          |  .  |                   .
                          |  .  |                   .
                          |  .  |                   .
                          |  .  |   +---------------------------+
                          |  .  |   |DataPoint M                |
                          +-----+   |+------+------+   +------+ |
                          |  M  |-->||label |label |...|label | |
                          +-----+   ||value1|value2|...|valueN| |
                                    |+------+------+   +------+ |
                                    |+-----+                    |
                                    ||value|                    |
                                    |+-----+                    |
                                    +---------------------------+
            
             Each distinct type of DataPoint represents the output of a specific
             aggregation function, the result of applying the DataPoint's
             associated function of to one or more measurements.
            
             All DataPoint types have three common fields:
             - Attributes includes key-value pairs associated with the data point
             - TimeUnixNano is required, set to the end time of the aggregation
             - StartTimeUnixNano is optional, but strongly encouraged for DataPoints
               having an AggregationTemporality field, as discussed below.
            
             Both TimeUnixNano and StartTimeUnixNano values are expressed as
             UNIX Epoch time in nanoseconds since 00:00:00 UTC on 1 January 1970.
            
             # TimeUnixNano
            
             This field is required, having consistent interpretation across
             DataPoint types.  TimeUnixNano is the moment corresponding to when
             the data point's aggregate value was captured.
            
             Data points with the 0 value for TimeUnixNano SHOULD be rejected
             by consumers.
            
             # StartTimeUnixNano
            
             StartTimeUnixNano in general allows detecting when a sequence of
             observations is unbroken.  This field indicates to consumers the
             start time for points with cumulative and delta
             AggregationTemporality, and it should be included whenever possible
             to support correct rate calculation.  Although it may be omitted
             when the start time is truly unknown, setting StartTimeUnixNano is
             strongly encouraged.
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.Metric.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.Metric.Name">
            <summary>
            name of the metric, including its DNS name prefix. It must be unique.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.Metric.DescriptionFieldNumber">
            <summary>Field number for the "description" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.Metric.Description">
            <summary>
            description of the metric, which can be used in documentation.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.Metric.UnitFieldNumber">
            <summary>Field number for the "unit" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.Metric.Unit">
            <summary>
            unit in which the metric value is reported. Follows the format
            described by http://unitsofmeasure.org/ucum.html.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.Metric.GaugeFieldNumber">
            <summary>Field number for the "gauge" field.</summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.Metric.SumFieldNumber">
            <summary>Field number for the "sum" field.</summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.Metric.HistogramFieldNumber">
            <summary>Field number for the "histogram" field.</summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.Metric.ExponentialHistogramFieldNumber">
            <summary>Field number for the "exponential_histogram" field.</summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.Metric.SummaryFieldNumber">
            <summary>Field number for the "summary" field.</summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Metrics.V1.Metric.DataOneofCase">
            <summary>Enum of possible cases for the "data" oneof.</summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Metrics.V1.Gauge">
             <summary>
             Gauge represents the type of a scalar metric that always exports the
             "current value" for every data point. It should be used for an "unknown"
             aggregation.
            
             A Gauge does not support different aggregation temporalities. Given the
             aggregation is unknown, points cannot be combined using the same
             aggregation, regardless of aggregation temporalities. Therefore,
             AggregationTemporality is not included. Consequently, this also means
             "StartTimeUnixNano" is ignored for all data points.
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.Gauge.DataPointsFieldNumber">
            <summary>Field number for the "data_points" field.</summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Metrics.V1.Sum">
            <summary>
            Sum represents the type of a scalar metric that is calculated as a sum of all
            reported measurements over a time interval.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.Sum.DataPointsFieldNumber">
            <summary>Field number for the "data_points" field.</summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.Sum.AggregationTemporalityFieldNumber">
            <summary>Field number for the "aggregation_temporality" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.Sum.AggregationTemporality">
            <summary>
            aggregation_temporality describes if the aggregator reports delta changes
            since last report time, or cumulative changes since a fixed start time.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.Sum.IsMonotonicFieldNumber">
            <summary>Field number for the "is_monotonic" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.Sum.IsMonotonic">
            <summary>
            If "true" means that the sum is monotonic.
            </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Metrics.V1.Histogram">
            <summary>
            Histogram represents the type of a metric that is calculated by aggregating
            as a Histogram of all reported measurements over a time interval.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.Histogram.DataPointsFieldNumber">
            <summary>Field number for the "data_points" field.</summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.Histogram.AggregationTemporalityFieldNumber">
            <summary>Field number for the "aggregation_temporality" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.Histogram.AggregationTemporality">
            <summary>
            aggregation_temporality describes if the aggregator reports delta changes
            since last report time, or cumulative changes since a fixed start time.
            </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogram">
            <summary>
            ExponentialHistogram represents the type of a metric that is calculated by aggregating
            as a ExponentialHistogram of all reported double measurements over a time interval.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogram.DataPointsFieldNumber">
            <summary>Field number for the "data_points" field.</summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogram.AggregationTemporalityFieldNumber">
            <summary>Field number for the "aggregation_temporality" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogram.AggregationTemporality">
            <summary>
            aggregation_temporality describes if the aggregator reports delta changes
            since last report time, or cumulative changes since a fixed start time.
            </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Metrics.V1.Summary">
            <summary>
            Summary metric data are used to convey quantile summaries,
            a Prometheus (see: https://prometheus.io/docs/concepts/metric_types/#summary)
            and OpenMetrics (see: https://github.com/OpenObservability/OpenMetrics/blob/4dbf6075567ab43296eed941037c12951faafb92/protos/prometheus.proto#L45)
            data type. These data points cannot always be merged in a meaningful way.
            While they can be useful in some applications, histogram data points are
            recommended for new applications.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.Summary.DataPointsFieldNumber">
            <summary>Field number for the "data_points" field.</summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Metrics.V1.NumberDataPoint">
            <summary>
            NumberDataPoint is a single data point in a timeseries that describes the
            time-varying scalar value of a metric.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.NumberDataPoint.AttributesFieldNumber">
            <summary>Field number for the "attributes" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.NumberDataPoint.Attributes">
            <summary>
            The set of key/value pairs that uniquely identify the timeseries from
            where this point belongs. The list may be empty (may contain 0 elements).
            Attribute keys MUST be unique (it is not allowed to have more than one
            attribute with the same key).
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.NumberDataPoint.StartTimeUnixNanoFieldNumber">
            <summary>Field number for the "start_time_unix_nano" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.NumberDataPoint.StartTimeUnixNano">
             <summary>
             StartTimeUnixNano is optional but strongly encouraged, see the
             the detailed comments above Metric.
            
             Value is UNIX Epoch time in nanoseconds since 00:00:00 UTC on 1 January
             1970.
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.NumberDataPoint.TimeUnixNanoFieldNumber">
            <summary>Field number for the "time_unix_nano" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.NumberDataPoint.TimeUnixNano">
             <summary>
             TimeUnixNano is required, see the detailed comments above Metric.
            
             Value is UNIX Epoch time in nanoseconds since 00:00:00 UTC on 1 January
             1970.
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.NumberDataPoint.AsDoubleFieldNumber">
            <summary>Field number for the "as_double" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.NumberDataPoint.HasAsDouble">
            <summary>Gets whether the "as_double" field is set</summary>
        </member>
        <member name="M:OpenTelemetry.Proto.Metrics.V1.NumberDataPoint.ClearAsDouble">
            <summary> Clears the value of the oneof if it's currently set to "as_double" </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.NumberDataPoint.AsIntFieldNumber">
            <summary>Field number for the "as_int" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.NumberDataPoint.HasAsInt">
            <summary>Gets whether the "as_int" field is set</summary>
        </member>
        <member name="M:OpenTelemetry.Proto.Metrics.V1.NumberDataPoint.ClearAsInt">
            <summary> Clears the value of the oneof if it's currently set to "as_int" </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.NumberDataPoint.ExemplarsFieldNumber">
            <summary>Field number for the "exemplars" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.NumberDataPoint.Exemplars">
            <summary>
            (Optional) List of exemplars collected from
            measurements that were used to form the data point
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.NumberDataPoint.FlagsFieldNumber">
            <summary>Field number for the "flags" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.NumberDataPoint.Flags">
            <summary>
            Flags that apply to this specific data point.  See DataPointFlags
            for the available flags and their meaning.
            </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Metrics.V1.NumberDataPoint.ValueOneofCase">
            <summary>Enum of possible cases for the "value" oneof.</summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Metrics.V1.HistogramDataPoint">
             <summary>
             HistogramDataPoint is a single data point in a timeseries that describes the
             time-varying values of a Histogram. A Histogram contains summary statistics
             for a population of values, it may optionally contain the distribution of
             those values across a set of buckets.
            
             If the histogram contains the distribution of values, then both
             "explicit_bounds" and "bucket counts" fields must be defined.
             If the histogram does not contain the distribution of values, then both
             "explicit_bounds" and "bucket_counts" must be omitted and only "count" and
             "sum" are known.
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.HistogramDataPoint.AttributesFieldNumber">
            <summary>Field number for the "attributes" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.HistogramDataPoint.Attributes">
            <summary>
            The set of key/value pairs that uniquely identify the timeseries from
            where this point belongs. The list may be empty (may contain 0 elements).
            Attribute keys MUST be unique (it is not allowed to have more than one
            attribute with the same key).
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.HistogramDataPoint.StartTimeUnixNanoFieldNumber">
            <summary>Field number for the "start_time_unix_nano" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.HistogramDataPoint.StartTimeUnixNano">
             <summary>
             StartTimeUnixNano is optional but strongly encouraged, see the
             the detailed comments above Metric.
            
             Value is UNIX Epoch time in nanoseconds since 00:00:00 UTC on 1 January
             1970.
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.HistogramDataPoint.TimeUnixNanoFieldNumber">
            <summary>Field number for the "time_unix_nano" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.HistogramDataPoint.TimeUnixNano">
             <summary>
             TimeUnixNano is required, see the detailed comments above Metric.
            
             Value is UNIX Epoch time in nanoseconds since 00:00:00 UTC on 1 January
             1970.
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.HistogramDataPoint.CountFieldNumber">
            <summary>Field number for the "count" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.HistogramDataPoint.Count">
            <summary>
            count is the number of values in the population. Must be non-negative. This
            value must be equal to the sum of the "count" fields in buckets if a
            histogram is provided.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.HistogramDataPoint.SumFieldNumber">
            <summary>Field number for the "sum" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.HistogramDataPoint.Sum">
             <summary>
             sum of the values in the population. If count is zero then this field
             must be zero.
            
             Note: Sum should only be filled out when measuring non-negative discrete
             events, and is assumed to be monotonic over the values of these events.
             Negative events *can* be recorded, but sum should not be filled out when
             doing so.  This is specifically to enforce compatibility w/ OpenMetrics,
             see: https://github.com/OpenObservability/OpenMetrics/blob/main/specification/OpenMetrics.md#histogram
             </summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.HistogramDataPoint.HasSum">
            <summary>Gets whether the "sum" field is set</summary>
        </member>
        <member name="M:OpenTelemetry.Proto.Metrics.V1.HistogramDataPoint.ClearSum">
            <summary>Clears the value of the "sum" field</summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.HistogramDataPoint.BucketCountsFieldNumber">
            <summary>Field number for the "bucket_counts" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.HistogramDataPoint.BucketCounts">
             <summary>
             bucket_counts is an optional field contains the count values of histogram
             for each bucket.
            
             The sum of the bucket_counts must equal the value in the count field.
            
             The number of elements in bucket_counts array must be by one greater than
             the number of elements in explicit_bounds array.
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.HistogramDataPoint.ExplicitBoundsFieldNumber">
            <summary>Field number for the "explicit_bounds" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.HistogramDataPoint.ExplicitBounds">
             <summary>
             explicit_bounds specifies buckets with explicitly defined bounds for values.
            
             The boundaries for bucket at index i are:
            
             (-infinity, explicit_bounds[i]] for i == 0
             (explicit_bounds[i-1], explicit_bounds[i]] for 0 &lt; i &lt; size(explicit_bounds)
             (explicit_bounds[i-1], +infinity) for i == size(explicit_bounds)
            
             The values in the explicit_bounds array must be strictly increasing.
            
             Histogram buckets are inclusive of their upper boundary, except the last
             bucket where the boundary is at infinity. This format is intentionally
             compatible with the OpenMetrics histogram definition.
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.HistogramDataPoint.ExemplarsFieldNumber">
            <summary>Field number for the "exemplars" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.HistogramDataPoint.Exemplars">
            <summary>
            (Optional) List of exemplars collected from
            measurements that were used to form the data point
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.HistogramDataPoint.FlagsFieldNumber">
            <summary>Field number for the "flags" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.HistogramDataPoint.Flags">
            <summary>
            Flags that apply to this specific data point.  See DataPointFlags
            for the available flags and their meaning.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.HistogramDataPoint.MinFieldNumber">
            <summary>Field number for the "min" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.HistogramDataPoint.Min">
            <summary>
            min is the minimum value over (start_time, end_time].
            </summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.HistogramDataPoint.HasMin">
            <summary>Gets whether the "min" field is set</summary>
        </member>
        <member name="M:OpenTelemetry.Proto.Metrics.V1.HistogramDataPoint.ClearMin">
            <summary>Clears the value of the "min" field</summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.HistogramDataPoint.MaxFieldNumber">
            <summary>Field number for the "max" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.HistogramDataPoint.Max">
            <summary>
            max is the maximum value over (start_time, end_time].
            </summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.HistogramDataPoint.HasMax">
            <summary>Gets whether the "max" field is set</summary>
        </member>
        <member name="M:OpenTelemetry.Proto.Metrics.V1.HistogramDataPoint.ClearMax">
            <summary>Clears the value of the "max" field</summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint">
            <summary>
            ExponentialHistogramDataPoint is a single data point in a timeseries that describes the
            time-varying values of a ExponentialHistogram of double values. A ExponentialHistogram contains
            summary statistics for a population of values, it may optionally contain the
            distribution of those values across a set of buckets.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.AttributesFieldNumber">
            <summary>Field number for the "attributes" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.Attributes">
            <summary>
            The set of key/value pairs that uniquely identify the timeseries from
            where this point belongs. The list may be empty (may contain 0 elements).
            Attribute keys MUST be unique (it is not allowed to have more than one
            attribute with the same key).
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.StartTimeUnixNanoFieldNumber">
            <summary>Field number for the "start_time_unix_nano" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.StartTimeUnixNano">
             <summary>
             StartTimeUnixNano is optional but strongly encouraged, see the
             the detailed comments above Metric.
            
             Value is UNIX Epoch time in nanoseconds since 00:00:00 UTC on 1 January
             1970.
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.TimeUnixNanoFieldNumber">
            <summary>Field number for the "time_unix_nano" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.TimeUnixNano">
             <summary>
             TimeUnixNano is required, see the detailed comments above Metric.
            
             Value is UNIX Epoch time in nanoseconds since 00:00:00 UTC on 1 January
             1970.
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.CountFieldNumber">
            <summary>Field number for the "count" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.Count">
            <summary>
            count is the number of values in the population. Must be
            non-negative. This value must be equal to the sum of the "bucket_counts"
            values in the positive and negative Buckets plus the "zero_count" field.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.SumFieldNumber">
            <summary>Field number for the "sum" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.Sum">
             <summary>
             sum of the values in the population. If count is zero then this field
             must be zero.
            
             Note: Sum should only be filled out when measuring non-negative discrete
             events, and is assumed to be monotonic over the values of these events.
             Negative events *can* be recorded, but sum should not be filled out when
             doing so.  This is specifically to enforce compatibility w/ OpenMetrics,
             see: https://github.com/OpenObservability/OpenMetrics/blob/main/specification/OpenMetrics.md#histogram
             </summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.HasSum">
            <summary>Gets whether the "sum" field is set</summary>
        </member>
        <member name="M:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.ClearSum">
            <summary>Clears the value of the "sum" field</summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.ScaleFieldNumber">
            <summary>Field number for the "scale" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.Scale">
             <summary>
             scale describes the resolution of the histogram.  Boundaries are
             located at powers of the base, where:
            
               base = (2^(2^-scale))
            
             The histogram bucket identified by `index`, a signed integer,
             contains values that are greater than (base^index) and
             less than or equal to (base^(index+1)).
            
             The positive and negative ranges of the histogram are expressed
             separately.  Negative values are mapped by their absolute value
             into the negative range using the same scale as the positive range.
            
             scale is not restricted by the protocol, as the permissible
             values depend on the range of the data.
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.ZeroCountFieldNumber">
            <summary>Field number for the "zero_count" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.ZeroCount">
             <summary>
             zero_count is the count of values that are either exactly zero or
             within the region considered zero by the instrumentation at the
             tolerated degree of precision.  This bucket stores values that
             cannot be expressed using the standard exponential formula as
             well as values that have been rounded to zero.
            
             Implementations MAY consider the zero bucket to have probability
             mass equal to (zero_count / count).
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.PositiveFieldNumber">
            <summary>Field number for the "positive" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.Positive">
            <summary>
            positive carries the positive range of exponential bucket counts.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.NegativeFieldNumber">
            <summary>Field number for the "negative" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.Negative">
            <summary>
            negative carries the negative range of exponential bucket counts.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.FlagsFieldNumber">
            <summary>Field number for the "flags" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.Flags">
            <summary>
            Flags that apply to this specific data point.  See DataPointFlags
            for the available flags and their meaning.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.ExemplarsFieldNumber">
            <summary>Field number for the "exemplars" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.Exemplars">
            <summary>
            (Optional) List of exemplars collected from
            measurements that were used to form the data point
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.MinFieldNumber">
            <summary>Field number for the "min" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.Min">
            <summary>
            min is the minimum value over (start_time, end_time].
            </summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.HasMin">
            <summary>Gets whether the "min" field is set</summary>
        </member>
        <member name="M:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.ClearMin">
            <summary>Clears the value of the "min" field</summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.MaxFieldNumber">
            <summary>Field number for the "max" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.Max">
            <summary>
            max is the maximum value over (start_time, end_time].
            </summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.HasMax">
            <summary>Gets whether the "max" field is set</summary>
        </member>
        <member name="M:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.ClearMax">
            <summary>Clears the value of the "max" field</summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.ZeroThresholdFieldNumber">
            <summary>Field number for the "zero_threshold" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.ZeroThreshold">
            <summary>
            ZeroThreshold may be optionally set to convey the width of the zero
            region. Where the zero region is defined as the closed interval
            [-ZeroThreshold, ZeroThreshold].
            When ZeroThreshold is 0, zero count bucket stores values that cannot be
            expressed using the standard exponential formula as well as values that
            have been rounded to zero.
            </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.Types">
            <summary>Container for nested types declared in the ExponentialHistogramDataPoint message type.</summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.Types.Buckets">
            <summary>
            Buckets are a set of bucket counts, encoded in a contiguous array
            of counts.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.Types.Buckets.OffsetFieldNumber">
            <summary>Field number for the "offset" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.Types.Buckets.Offset">
            <summary>
            Offset is the bucket index of the first entry in the bucket_counts array.
            
            Note: This uses a varint encoding as a simple form of compression.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.Types.Buckets.BucketCountsFieldNumber">
            <summary>Field number for the "bucket_counts" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.ExponentialHistogramDataPoint.Types.Buckets.BucketCounts">
             <summary>
             bucket_counts is an array of count values, where bucket_counts[i] carries
             the count of the bucket at index (offset+i). bucket_counts[i] is the count
             of values greater than base^(offset+i) and less than or equal to
             base^(offset+i+1).
            
             Note: By contrast, the explicit HistogramDataPoint uses
             fixed64.  This field is expected to have many buckets,
             especially zeros, so uint64 has been selected to ensure
             varint encoding.
             </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Metrics.V1.SummaryDataPoint">
            <summary>
            SummaryDataPoint is a single data point in a timeseries that describes the
            time-varying values of a Summary metric.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.SummaryDataPoint.AttributesFieldNumber">
            <summary>Field number for the "attributes" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.SummaryDataPoint.Attributes">
            <summary>
            The set of key/value pairs that uniquely identify the timeseries from
            where this point belongs. The list may be empty (may contain 0 elements).
            Attribute keys MUST be unique (it is not allowed to have more than one
            attribute with the same key).
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.SummaryDataPoint.StartTimeUnixNanoFieldNumber">
            <summary>Field number for the "start_time_unix_nano" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.SummaryDataPoint.StartTimeUnixNano">
             <summary>
             StartTimeUnixNano is optional but strongly encouraged, see the
             the detailed comments above Metric.
            
             Value is UNIX Epoch time in nanoseconds since 00:00:00 UTC on 1 January
             1970.
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.SummaryDataPoint.TimeUnixNanoFieldNumber">
            <summary>Field number for the "time_unix_nano" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.SummaryDataPoint.TimeUnixNano">
             <summary>
             TimeUnixNano is required, see the detailed comments above Metric.
            
             Value is UNIX Epoch time in nanoseconds since 00:00:00 UTC on 1 January
             1970.
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.SummaryDataPoint.CountFieldNumber">
            <summary>Field number for the "count" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.SummaryDataPoint.Count">
            <summary>
            count is the number of values in the population. Must be non-negative.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.SummaryDataPoint.SumFieldNumber">
            <summary>Field number for the "sum" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.SummaryDataPoint.Sum">
             <summary>
             sum of the values in the population. If count is zero then this field
             must be zero.
            
             Note: Sum should only be filled out when measuring non-negative discrete
             events, and is assumed to be monotonic over the values of these events.
             Negative events *can* be recorded, but sum should not be filled out when
             doing so.  This is specifically to enforce compatibility w/ OpenMetrics,
             see: https://github.com/OpenObservability/OpenMetrics/blob/main/specification/OpenMetrics.md#summary
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.SummaryDataPoint.QuantileValuesFieldNumber">
            <summary>Field number for the "quantile_values" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.SummaryDataPoint.QuantileValues">
            <summary>
            (Optional) list of values at different quantiles of the distribution calculated
            from the current snapshot. The quantiles must be strictly increasing.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.SummaryDataPoint.FlagsFieldNumber">
            <summary>Field number for the "flags" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.SummaryDataPoint.Flags">
            <summary>
            Flags that apply to this specific data point.  See DataPointFlags
            for the available flags and their meaning.
            </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Metrics.V1.SummaryDataPoint.Types">
            <summary>Container for nested types declared in the SummaryDataPoint message type.</summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Metrics.V1.SummaryDataPoint.Types.ValueAtQuantile">
             <summary>
             Represents the value at a given quantile of a distribution.
            
             To record Min and Max values following conventions are used:
             - The 1.0 quantile is equivalent to the maximum value observed.
             - The 0.0 quantile is equivalent to the minimum value observed.
            
             See the following issue for more context:
             https://github.com/open-telemetry/opentelemetry-proto/issues/125
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.SummaryDataPoint.Types.ValueAtQuantile.QuantileFieldNumber">
            <summary>Field number for the "quantile" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.SummaryDataPoint.Types.ValueAtQuantile.Quantile">
            <summary>
            The quantile of a distribution. Must be in the interval
            [0.0, 1.0].
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.SummaryDataPoint.Types.ValueAtQuantile.ValueFieldNumber">
            <summary>Field number for the "value" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.SummaryDataPoint.Types.ValueAtQuantile.Value">
             <summary>
             The value at the given quantile of a distribution.
            
             Quantile values must NOT be negative.
             </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Metrics.V1.Exemplar">
            <summary>
            A representation of an exemplar, which is a sample input measurement.
            Exemplars also hold information about the environment when the measurement
            was recorded, for example the span and trace ID of the active span when the
            exemplar was recorded.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.Exemplar.FilteredAttributesFieldNumber">
            <summary>Field number for the "filtered_attributes" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.Exemplar.FilteredAttributes">
            <summary>
            The set of key/value pairs that were filtered out by the aggregator, but
            recorded alongside the original measurement. Only key/value pairs that were
            filtered out by the aggregator should be included
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.Exemplar.TimeUnixNanoFieldNumber">
            <summary>Field number for the "time_unix_nano" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.Exemplar.TimeUnixNano">
             <summary>
             time_unix_nano is the exact time when this exemplar was recorded
            
             Value is UNIX Epoch time in nanoseconds since 00:00:00 UTC on 1 January
             1970.
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.Exemplar.AsDoubleFieldNumber">
            <summary>Field number for the "as_double" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.Exemplar.HasAsDouble">
            <summary>Gets whether the "as_double" field is set</summary>
        </member>
        <member name="M:OpenTelemetry.Proto.Metrics.V1.Exemplar.ClearAsDouble">
            <summary> Clears the value of the oneof if it's currently set to "as_double" </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.Exemplar.AsIntFieldNumber">
            <summary>Field number for the "as_int" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.Exemplar.HasAsInt">
            <summary>Gets whether the "as_int" field is set</summary>
        </member>
        <member name="M:OpenTelemetry.Proto.Metrics.V1.Exemplar.ClearAsInt">
            <summary> Clears the value of the oneof if it's currently set to "as_int" </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.Exemplar.SpanIdFieldNumber">
            <summary>Field number for the "span_id" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.Exemplar.SpanId">
            <summary>
            (Optional) Span ID of the exemplar trace.
            span_id may be missing if the measurement is not recorded inside a trace
            or if the trace is not sampled.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Metrics.V1.Exemplar.TraceIdFieldNumber">
            <summary>Field number for the "trace_id" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Metrics.V1.Exemplar.TraceId">
            <summary>
            (Optional) Trace ID of the exemplar trace.
            trace_id may be missing if the measurement is not recorded inside a trace
            or if the trace is not sampled.
            </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Metrics.V1.Exemplar.ValueOneofCase">
            <summary>Enum of possible cases for the "value" oneof.</summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Resource.V1.ResourceReflection">
            <summary>Holder for reflection information generated from opentelemetry/proto/resource/v1/resource.proto</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Resource.V1.ResourceReflection.Descriptor">
            <summary>File descriptor for opentelemetry/proto/resource/v1/resource.proto</summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Resource.V1.Resource">
            <summary>
            Resource information.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Resource.V1.Resource.AttributesFieldNumber">
            <summary>Field number for the "attributes" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Resource.V1.Resource.Attributes">
            <summary>
            Set of attributes that describe the resource.
            Attribute keys MUST be unique (it is not allowed to have more than one
            attribute with the same key).
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Resource.V1.Resource.DroppedAttributesCountFieldNumber">
            <summary>Field number for the "dropped_attributes_count" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Resource.V1.Resource.DroppedAttributesCount">
            <summary>
            dropped_attributes_count is the number of dropped attributes. If the value is 0, then
            no attributes were dropped.
            </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Trace.V1.TraceReflection">
            <summary>Holder for reflection information generated from opentelemetry/proto/trace/v1/trace.proto</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Trace.V1.TraceReflection.Descriptor">
            <summary>File descriptor for opentelemetry/proto/trace/v1/trace.proto</summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Trace.V1.TracesData">
             <summary>
             TracesData represents the traces data that can be stored in a persistent storage,
             OR can be embedded by other protocols that transfer OTLP traces data but do
             not implement the OTLP protocol.
            
             The main difference between this message and collector protocol is that
             in this message there will not be any "control" or "metadata" specific to
             OTLP protocol.
            
             When new fields are added into this message, the OTLP request MUST be updated
             as well.
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.TracesData.ResourceSpansFieldNumber">
            <summary>Field number for the "resource_spans" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Trace.V1.TracesData.ResourceSpans">
            <summary>
            An array of ResourceSpans.
            For data coming from a single resource this array will typically contain
            one element. Intermediary nodes that receive data from multiple origins
            typically batch the data before forwarding further and in that case this
            array will contain multiple elements.
            </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Trace.V1.ResourceSpans">
            <summary>
            A collection of ScopeSpans from a Resource.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.ResourceSpans.ResourceFieldNumber">
            <summary>Field number for the "resource" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Trace.V1.ResourceSpans.Resource">
            <summary>
            The resource for the spans in this message.
            If this field is not set then no resource info is known.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.ResourceSpans.ScopeSpansFieldNumber">
            <summary>Field number for the "scope_spans" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Trace.V1.ResourceSpans.ScopeSpans">
            <summary>
            A list of ScopeSpans that originate from a resource.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.ResourceSpans.SchemaUrlFieldNumber">
            <summary>Field number for the "schema_url" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Trace.V1.ResourceSpans.SchemaUrl">
            <summary>
            This schema_url applies to the data in the "resource" field. It does not apply
            to the data in the "scope_spans" field which have their own schema_url field.
            </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Trace.V1.ScopeSpans">
            <summary>
            A collection of Spans produced by an InstrumentationScope.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.ScopeSpans.ScopeFieldNumber">
            <summary>Field number for the "scope" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Trace.V1.ScopeSpans.Scope">
            <summary>
            The instrumentation scope information for the spans in this message.
            Semantically when InstrumentationScope isn't set, it is equivalent with
            an empty instrumentation scope name (unknown).
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.ScopeSpans.SpansFieldNumber">
            <summary>Field number for the "spans" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Trace.V1.ScopeSpans.Spans">
            <summary>
            A list of Spans that originate from an instrumentation scope.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.ScopeSpans.SchemaUrlFieldNumber">
            <summary>Field number for the "schema_url" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Trace.V1.ScopeSpans.SchemaUrl">
            <summary>
            This schema_url applies to all spans and span events in the "spans" field.
            </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Trace.V1.Span">
             <summary>
             A Span represents a single operation performed by a single component of the system.
            
             The next available field id is 17.
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Span.TraceIdFieldNumber">
            <summary>Field number for the "trace_id" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Trace.V1.Span.TraceId">
             <summary>
             A unique identifier for a trace. All spans from the same trace share
             the same `trace_id`. The ID is a 16-byte array. An ID with all zeroes OR
             of length other than 16 bytes is considered invalid (empty string in OTLP/JSON
             is zero-length and thus is also invalid).
            
             This field is required.
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Span.SpanIdFieldNumber">
            <summary>Field number for the "span_id" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Trace.V1.Span.SpanId">
             <summary>
             A unique identifier for a span within a trace, assigned when the span
             is created. The ID is an 8-byte array. An ID with all zeroes OR of length
             other than 8 bytes is considered invalid (empty string in OTLP/JSON
             is zero-length and thus is also invalid).
            
             This field is required.
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Span.TraceStateFieldNumber">
            <summary>Field number for the "trace_state" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Trace.V1.Span.TraceState">
            <summary>
            trace_state conveys information about request position in multiple distributed tracing graphs.
            It is a trace_state in w3c-trace-context format: https://www.w3.org/TR/trace-context/#tracestate-header
            See also https://github.com/w3c/distributed-tracing for more details about this field.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Span.ParentSpanIdFieldNumber">
            <summary>Field number for the "parent_span_id" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Trace.V1.Span.ParentSpanId">
            <summary>
            The `span_id` of this span's parent span. If this is a root span, then this
            field must be empty. The ID is an 8-byte array.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Span.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Trace.V1.Span.Name">
             <summary>
             A description of the span's operation.
            
             For example, the name can be a qualified method name or a file name
             and a line number where the operation is called. A best practice is to use
             the same display name at the same call point in an application.
             This makes it easier to correlate spans in different traces.
            
             This field is semantically required to be set to non-empty string.
             Empty value is equivalent to an unknown span name.
            
             This field is required.
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Span.KindFieldNumber">
            <summary>Field number for the "kind" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Trace.V1.Span.Kind">
            <summary>
            Distinguishes between spans generated in a particular context. For example,
            two spans with the same name may be distinguished using `CLIENT` (caller)
            and `SERVER` (callee) to identify queueing latency associated with the span.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Span.StartTimeUnixNanoFieldNumber">
            <summary>Field number for the "start_time_unix_nano" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Trace.V1.Span.StartTimeUnixNano">
             <summary>
             start_time_unix_nano is the start time of the span. On the client side, this is the time
             kept by the local machine where the span execution starts. On the server side, this
             is the time when the server's application handler starts running.
             Value is UNIX Epoch time in nanoseconds since 00:00:00 UTC on 1 January 1970.
            
             This field is semantically required and it is expected that end_time >= start_time.
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Span.EndTimeUnixNanoFieldNumber">
            <summary>Field number for the "end_time_unix_nano" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Trace.V1.Span.EndTimeUnixNano">
             <summary>
             end_time_unix_nano is the end time of the span. On the client side, this is the time
             kept by the local machine where the span execution ends. On the server side, this
             is the time when the server application handler stops running.
             Value is UNIX Epoch time in nanoseconds since 00:00:00 UTC on 1 January 1970.
            
             This field is semantically required and it is expected that end_time >= start_time.
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Span.AttributesFieldNumber">
            <summary>Field number for the "attributes" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Trace.V1.Span.Attributes">
             <summary>
             attributes is a collection of key/value pairs. Note, global attributes
             like server name can be set using the resource API. Examples of attributes:
            
                 "/http/user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
                 "/http/server_latency": 300
                 "example.com/myattribute": true
                 "example.com/score": 10.239
            
             The OpenTelemetry API specification further restricts the allowed value types:
             https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/common/README.md#attribute
             Attribute keys MUST be unique (it is not allowed to have more than one
             attribute with the same key).
             </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Span.DroppedAttributesCountFieldNumber">
            <summary>Field number for the "dropped_attributes_count" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Trace.V1.Span.DroppedAttributesCount">
            <summary>
            dropped_attributes_count is the number of attributes that were discarded. Attributes
            can be discarded because their keys are too long or because there are too many
            attributes. If this value is 0, then no attributes were dropped.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Span.EventsFieldNumber">
            <summary>Field number for the "events" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Trace.V1.Span.Events">
            <summary>
            events is a collection of Event items.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Span.DroppedEventsCountFieldNumber">
            <summary>Field number for the "dropped_events_count" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Trace.V1.Span.DroppedEventsCount">
            <summary>
            dropped_events_count is the number of dropped events. If the value is 0, then no
            events were dropped.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Span.LinksFieldNumber">
            <summary>Field number for the "links" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Trace.V1.Span.Links">
            <summary>
            links is a collection of Links, which are references from this span to a span
            in the same or different trace.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Span.DroppedLinksCountFieldNumber">
            <summary>Field number for the "dropped_links_count" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Trace.V1.Span.DroppedLinksCount">
            <summary>
            dropped_links_count is the number of dropped links after the maximum size was
            enforced. If this value is 0, then no links were dropped.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Span.StatusFieldNumber">
            <summary>Field number for the "status" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Trace.V1.Span.Status">
            <summary>
            An optional final status for this span. Semantically when Status isn't set, it means
            span's status code is unset, i.e. assume STATUS_CODE_UNSET (code = 0).
            </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Trace.V1.Span.Types">
            <summary>Container for nested types declared in the Span message type.</summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Trace.V1.Span.Types.SpanKind">
            <summary>
            SpanKind is the type of span. Can be used to specify additional relationships between spans
            in addition to a parent/child relationship.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Span.Types.SpanKind.Unspecified">
            <summary>
            Unspecified. Do NOT use as default.
            Implementations MAY assume SpanKind to be INTERNAL when receiving UNSPECIFIED.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Span.Types.SpanKind.Internal">
            <summary>
            Indicates that the span represents an internal operation within an application,
            as opposed to an operation happening at the boundaries. Default value.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Span.Types.SpanKind.Server">
            <summary>
            Indicates that the span covers server-side handling of an RPC or other
            remote network request.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Span.Types.SpanKind.Client">
            <summary>
            Indicates that the span describes a request to some remote service.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Span.Types.SpanKind.Producer">
            <summary>
            Indicates that the span describes a producer sending a message to a broker.
            Unlike CLIENT and SERVER, there is often no direct critical path latency relationship
            between producer and consumer spans. A PRODUCER span ends when the message was accepted
            by the broker while the logical processing of the message might span a much longer time.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Span.Types.SpanKind.Consumer">
            <summary>
            Indicates that the span describes consumer receiving a message from a broker.
            Like the PRODUCER kind, there is often no direct critical path latency relationship
            between producer and consumer spans.
            </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Trace.V1.Span.Types.Event">
            <summary>
            Event is a time-stamped annotation of the span, consisting of user-supplied
            text description and key-value pairs.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Span.Types.Event.TimeUnixNanoFieldNumber">
            <summary>Field number for the "time_unix_nano" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Trace.V1.Span.Types.Event.TimeUnixNano">
            <summary>
            time_unix_nano is the time the event occurred.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Span.Types.Event.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Trace.V1.Span.Types.Event.Name">
            <summary>
            name of the event.
            This field is semantically required to be set to non-empty string.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Span.Types.Event.AttributesFieldNumber">
            <summary>Field number for the "attributes" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Trace.V1.Span.Types.Event.Attributes">
            <summary>
            attributes is a collection of attribute key/value pairs on the event.
            Attribute keys MUST be unique (it is not allowed to have more than one
            attribute with the same key).
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Span.Types.Event.DroppedAttributesCountFieldNumber">
            <summary>Field number for the "dropped_attributes_count" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Trace.V1.Span.Types.Event.DroppedAttributesCount">
            <summary>
            dropped_attributes_count is the number of dropped attributes. If the value is 0,
            then no attributes were dropped.
            </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Trace.V1.Span.Types.Link">
            <summary>
            A pointer from the current span to another span in the same trace or in a
            different trace. For example, this can be used in batching operations,
            where a single batch handler processes multiple requests from different
            traces or when the handler receives a request from a different project.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Span.Types.Link.TraceIdFieldNumber">
            <summary>Field number for the "trace_id" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Trace.V1.Span.Types.Link.TraceId">
            <summary>
            A unique identifier of a trace that this linked span is part of. The ID is a
            16-byte array.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Span.Types.Link.SpanIdFieldNumber">
            <summary>Field number for the "span_id" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Trace.V1.Span.Types.Link.SpanId">
            <summary>
            A unique identifier for the linked span. The ID is an 8-byte array.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Span.Types.Link.TraceStateFieldNumber">
            <summary>Field number for the "trace_state" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Trace.V1.Span.Types.Link.TraceState">
            <summary>
            The trace_state associated with the link.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Span.Types.Link.AttributesFieldNumber">
            <summary>Field number for the "attributes" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Trace.V1.Span.Types.Link.Attributes">
            <summary>
            attributes is a collection of attribute key/value pairs on the link.
            Attribute keys MUST be unique (it is not allowed to have more than one
            attribute with the same key).
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Span.Types.Link.DroppedAttributesCountFieldNumber">
            <summary>Field number for the "dropped_attributes_count" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Trace.V1.Span.Types.Link.DroppedAttributesCount">
            <summary>
            dropped_attributes_count is the number of dropped attributes. If the value is 0,
            then no attributes were dropped.
            </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Trace.V1.Status">
            <summary>
            The Status type defines a logical error model that is suitable for different
            programming environments, including REST APIs and RPC APIs.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Status.MessageFieldNumber">
            <summary>Field number for the "message" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Trace.V1.Status.Message">
            <summary>
            A developer-facing human readable error message.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Status.CodeFieldNumber">
            <summary>Field number for the "code" field.</summary>
        </member>
        <member name="P:OpenTelemetry.Proto.Trace.V1.Status.Code">
            <summary>
            The status code.
            </summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Trace.V1.Status.Types">
            <summary>Container for nested types declared in the Status message type.</summary>
        </member>
        <member name="T:OpenTelemetry.Proto.Trace.V1.Status.Types.StatusCode">
            <summary>
            For the semantics of status codes see
            https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/api.md#set-status
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Status.Types.StatusCode.Unset">
            <summary>
            The default status.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Status.Types.StatusCode.Ok">
            <summary>
            The Span has been validated by an Application developer or Operator to 
            have completed successfully.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Proto.Trace.V1.Status.Types.StatusCode.Error">
            <summary>
            The Span contains an error.
            </summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.GenerateLogLevelRegex_0">
            <summary>Custom <see cref="T:System.Text.RegularExpressions.Regex"/>-derived type for the GenerateLogLevelRegex method.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.GenerateLogLevelRegex_0.Instance">
            <summary>Cached, thread-safe singleton instance.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.GenerateLogLevelRegex_0.#ctor">
            <summary>Initializes the instance.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.GenerateLogLevelRegex_0.RunnerFactory">
            <summary>Provides a factory for creating <see cref="T:System.Text.RegularExpressions.RegexRunner"/> instances to be used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.GenerateLogLevelRegex_0.RunnerFactory.CreateInstance">
            <summary>Creates an instance of a <see cref="T:System.Text.RegularExpressions.RegexRunner"/> used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.GenerateLogLevelRegex_0.RunnerFactory.Runner">
            <summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.GenerateLogLevelRegex_0.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
            <summary>Scan the <paramref name="inputSpan"/> starting from base.runtextstart for the next match.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.GenerateLogLevelRegex_0.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
            <summary>Search <paramref name="inputSpan"/> starting from base.runtextpos for the next location a match could possibly start.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if a possible match was found; false if no more matches are possible.</returns>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.GenerateLogLevelRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
            <summary>Determine whether <paramref name="inputSpan"/> at base.runtextpos is a match for the regular expression.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.GenerateUrlRegEx_1">
            <summary>Custom <see cref="T:System.Text.RegularExpressions.Regex"/>-derived type for the GenerateUrlRegEx method.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.GenerateUrlRegEx_1.Instance">
            <summary>Cached, thread-safe singleton instance.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.GenerateUrlRegEx_1.#ctor">
            <summary>Initializes the instance.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.GenerateUrlRegEx_1.RunnerFactory">
            <summary>Provides a factory for creating <see cref="T:System.Text.RegularExpressions.RegexRunner"/> instances to be used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.GenerateUrlRegEx_1.RunnerFactory.CreateInstance">
            <summary>Creates an instance of a <see cref="T:System.Text.RegularExpressions.RegexRunner"/> used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.GenerateUrlRegEx_1.RunnerFactory.Runner">
            <summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.GenerateUrlRegEx_1.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
            <summary>Scan the <paramref name="inputSpan"/> starting from base.runtextstart for the next match.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.GenerateUrlRegEx_1.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
            <summary>Search <paramref name="inputSpan"/> starting from base.runtextpos for the next location a match could possibly start.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if a possible match was found; false if no more matches are possible.</returns>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.GenerateUrlRegEx_1.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
            <summary>Determine whether <paramref name="inputSpan"/> at base.runtextpos is a match for the regular expression.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.MatchSecondsInTimeFormatPattern_2">
            <summary>Custom <see cref="T:System.Text.RegularExpressions.Regex"/>-derived type for the MatchSecondsInTimeFormatPattern method.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.MatchSecondsInTimeFormatPattern_2.Instance">
            <summary>Cached, thread-safe singleton instance.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.MatchSecondsInTimeFormatPattern_2.#ctor">
            <summary>Initializes the instance.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.MatchSecondsInTimeFormatPattern_2.RunnerFactory">
            <summary>Provides a factory for creating <see cref="T:System.Text.RegularExpressions.RegexRunner"/> instances to be used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.MatchSecondsInTimeFormatPattern_2.RunnerFactory.CreateInstance">
            <summary>Creates an instance of a <see cref="T:System.Text.RegularExpressions.RegexRunner"/> used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.MatchSecondsInTimeFormatPattern_2.RunnerFactory.Runner">
            <summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.MatchSecondsInTimeFormatPattern_2.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
            <summary>Scan the <paramref name="inputSpan"/> starting from base.runtextstart for the next match.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.MatchSecondsInTimeFormatPattern_2.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
            <summary>Search <paramref name="inputSpan"/> starting from base.runtextpos for the next location a match could possibly start.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if a possible match was found; false if no more matches are possible.</returns>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.MatchSecondsInTimeFormatPattern_2.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
            <summary>Determine whether <paramref name="inputSpan"/> at base.runtextpos is a match for the regular expression.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.GenerateRfc3339RegEx_3">
            <summary>Custom <see cref="T:System.Text.RegularExpressions.Regex"/>-derived type for the GenerateRfc3339RegEx method.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.GenerateRfc3339RegEx_3.Instance">
            <summary>Cached, thread-safe singleton instance.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.GenerateRfc3339RegEx_3.#ctor">
            <summary>Initializes the instance.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.GenerateRfc3339RegEx_3.RunnerFactory">
            <summary>Provides a factory for creating <see cref="T:System.Text.RegularExpressions.RegexRunner"/> instances to be used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.GenerateRfc3339RegEx_3.RunnerFactory.CreateInstance">
            <summary>Creates an instance of a <see cref="T:System.Text.RegularExpressions.RegexRunner"/> used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.GenerateRfc3339RegEx_3.RunnerFactory.Runner">
            <summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.GenerateRfc3339RegEx_3.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
            <summary>Scan the <paramref name="inputSpan"/> starting from base.runtextstart for the next match.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.GenerateRfc3339RegEx_3.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
            <summary>Search <paramref name="inputSpan"/> starting from base.runtextpos for the next location a match could possibly start.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if a possible match was found; false if no more matches are possible.</returns>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.GenerateRfc3339RegEx_3.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
            <summary>Determine whether <paramref name="inputSpan"/> at base.runtextpos is a match for the regular expression.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.Utilities">
            <summary>Helper methods used by generated <see cref="T:System.Text.RegularExpressions.Regex"/>-derived implementations.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout">
            <summary>Default timeout value set in <see cref="T:System.AppContext"/>, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout"/> if none was set.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout">
            <summary>Whether <see cref="F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout"/> is non-infinite.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.Utilities.IsBoundary(System.ReadOnlySpan{System.Char},System.Int32)">
            <summary>Determines whether the specified index is a boundary.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.Utilities.IsWordChar(System.Char)">
            <summary>Determines whether the character is part of the [\w] set.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.Utilities.StackPop(System.Int32[],System.Int32@,System.Int32@,System.Int32@)">
            <summary>Pops 2 values from the backtracking stack.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.Utilities.StackPush(System.Int32[]@,System.Int32@,System.Int32)">
            <summary>Pushes 1 value onto the backtracking stack.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.Utilities.StackPush(System.Int32[]@,System.Int32@,System.Int32,System.Int32)">
            <summary>Pushes 2 values onto the backtracking stack.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_ascii_7888FF23FFFFFF87FEFFFF57">
            <summary>Supports searching for characters in or not in "#$%&amp;+/0123456789=@ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz|~".</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_ascii_7AF8FFAFFFFFFF87FEFFFF57">
            <summary>Supports searching for characters in or not in "!#$%&amp;+,-./0123456789:;=?@ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz|~".</summary>
        </member>
    </members>
</doc>
